import{_ as t,z as p,A as r,X as a,C as n,T as e,a6 as i,Q as o}from"./framework.fef63301.js";const l="/vue-press/assets/ngixn-base.0db9b462.webp",c={},d=i(`<h1 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识" aria-hidden="true">#</a> 基础知识</h1><h2 id="基础命令" tabindex="-1"><a class="header-anchor" href="#基础命令" aria-hidden="true">#</a> 基础命令</h2><h3 id="列出-nginx-相关软件包" tabindex="-1"><a class="header-anchor" href="#列出-nginx-相关软件包" aria-hidden="true">#</a> 列出 nginx 相关软件包</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>yum list <span class="token operator">|</span> grep nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>yum list：列出所有软件清单</li><li>yum list installed：列出已安装软件清单 -- 检测系统中是否安装某个软件</li><li>grep：用于查找文件中符合条件的字符串</li></ul><h3 id="安装-nginx" tabindex="-1"><a class="header-anchor" href="#安装-nginx" aria-hidden="true">#</a> 安装 nginx</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>yum install nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查看-nginx-版本信息" tabindex="-1"><a class="header-anchor" href="#查看-nginx-版本信息" aria-hidden="true">#</a> 查看 nginx 版本信息</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>nginx <span class="token operator">-</span>v
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="列出-nginx-相关目录" tabindex="-1"><a class="header-anchor" href="#列出-nginx-相关目录" aria-hidden="true">#</a> 列出 nginx 相关目录</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>rpm <span class="token operator">-</span>ql nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="全格式显示所有-nginx-运行进程" tabindex="-1"><a class="header-anchor" href="#全格式显示所有-nginx-运行进程" aria-hidden="true">#</a> 全格式显示所有 nginx 运行进程</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>ps <span class="token operator">-</span>ef <span class="token operator">|</span> grep nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>ps：列出系统中当前运行的进程</li><li>-ef：-e 显示所有，-f 全格式显示，也可使用 aux，两者显示风格不同</li></ul><h3 id="开机自启" tabindex="-1"><a class="header-anchor" href="#开机自启" aria-hidden="true">#</a> 开机自启</h3><h4 id="设置开机自启" tabindex="-1"><a class="header-anchor" href="#设置开机自启" aria-hidden="true">#</a> 设置开机自启</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>systemctl enable nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="关闭开机自启" tabindex="-1"><a class="header-anchor" href="#关闭开机自启" aria-hidden="true">#</a> 关闭开机自启</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>systemctl disable nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可用 reboot 重启服务器，配合 ps -ef | grep nginx 进行测试</p><h3 id="启动-停止-重启-重载" tabindex="-1"><a class="header-anchor" href="#启动-停止-重启-重载" aria-hidden="true">#</a> 启动 &amp; 停止 &amp; 重启 &amp; 重载</h3><h4 id="启动-nginx" tabindex="-1"><a class="header-anchor" href="#启动-nginx" aria-hidden="true">#</a> 启动 nginx</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>systemctl start nginx ｜ nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="停止-nginx" tabindex="-1"><a class="header-anchor" href="#停止-nginx" aria-hidden="true">#</a> 停止 nginx</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>systemctl stop nginx <span class="token operator">|</span> nginx <span class="token operator">-</span>s stop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="重启-nginx" tabindex="-1"><a class="header-anchor" href="#重启-nginx" aria-hidden="true">#</a> 重启 nginx</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>systemctl restart nginx <span class="token operator">|</span> nginx <span class="token operator">-</span>s reopen
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="重载-nginx-更改-nginx-配置后需执行" tabindex="-1"><a class="header-anchor" href="#重载-nginx-更改-nginx-配置后需执行" aria-hidden="true">#</a> 重载 nginx，更改 nginx 配置后需执行</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>systemctl reload nginx <span class="token operator">|</span> nginx <span class="token operator">-</span>s reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="杀死单个进程" tabindex="-1"><a class="header-anchor" href="#杀死单个进程" aria-hidden="true">#</a> 杀死单个进程</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>kill <span class="token operator">-</span><span class="token number">9</span> <span class="token constant">PID</span>（进程<span class="token constant">ID</span>）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查看-nginx-最终配置" tabindex="-1"><a class="header-anchor" href="#查看-nginx-最终配置" aria-hidden="true">#</a> 查看 nginx 最终配置</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>nginx <span class="token operator">-</span><span class="token constant">T</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="检查配置项是否有问题-每次更改完先检查后重载" tabindex="-1"><a class="header-anchor" href="#检查配置项是否有问题-每次更改完先检查后重载" aria-hidden="true">#</a> 检查配置项是否有问题，每次更改完先检查后重载</h3><h4 id="当前目录下" tabindex="-1"><a class="header-anchor" href="#当前目录下" aria-hidden="true">#</a> 当前目录下</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>nginx <span class="token operator">-</span>t
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="不在当前目录" tabindex="-1"><a class="header-anchor" href="#不在当前目录" aria-hidden="true">#</a> 不在当前目录</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>nginx <span class="token operator">-</span>t <span class="token operator">-</span>c <span class="token operator">&lt;</span>配置路径<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><p>nginx.conf 文件默认配置 <img src="`+l+`" alt="图片"></p><h3 id="上文日志格式中所涉及变量含义如下" tabindex="-1"><a class="header-anchor" href="#上文日志格式中所涉及变量含义如下" aria-hidden="true">#</a> 上文日志格式中所涉及变量含义如下</h3><ul><li>变量 含义</li><li>$remote_addr 客户端地址</li><li>$remote_user 已经过验证的用户名</li><li>$time_local 通用日志格式的本地时间</li><li>$request 完整的原始的请求行</li><li>$status 下发给客户端的响应码</li><li>$body_bytes_sent 下发给客户端的字节数</li><li>$http_referer 当前请求上一次页面访问的地址</li><li>$http_user_agent 客户端agent信息</li><li>$http_x_forwarded_for 获得用户ip</li></ul><h2 id="静态资源配置" tabindex="-1"><a class="header-anchor" href="#静态资源配置" aria-hidden="true">#</a> 静态资源配置</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>server <span class="token punctuation">{</span>
  listen <span class="token number">80</span><span class="token punctuation">;</span>
  server_name <span class="token keyword">static</span><span class="token punctuation">.</span>deeruby<span class="token punctuation">.</span>com<span class="token punctuation">;</span>

  location <span class="token operator">/</span><span class="token keyword">static</span> <span class="token punctuation">{</span>
    root <span class="token operator">/</span>home<span class="token punctuation">;</span>
    # alias <span class="token operator">/</span>home<span class="token operator">/</span><span class="token keyword">static</span><span class="token punctuation">;</span>

    autoindex on<span class="token punctuation">;</span>             # 开启静态资源目录
    autoindex_exact_size off<span class="token punctuation">;</span> # 文件单位 <span class="token operator">--</span> on：字节      off：<span class="token constant">KB</span>、<span class="token constant">MB</span>、<span class="token constant">GB</span>
    autoindex_localtime off<span class="token punctuation">;</span>  # 时间格式 <span class="token operator">--</span> on：服务器时间 off：<span class="token constant">GMT</span>时间
    autoindex_format html<span class="token punctuation">;</span>    # 目录格式
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问 static.deeruby.com/static/othe… 成功，即配置成功</p><h4 id="root-与-alias-区别" tabindex="-1"><a class="header-anchor" href="#root-与-alias-区别" aria-hidden="true">#</a> root 与 alias 区别</h4><ul><li>图中静态资源所在目录为：/home/static；root 查找静态资源的路径为其填写路径拼接 location 路径，alias 则直接寻找其填写路径；</li><li>alias 只能用于 location 中；</li></ul><h4 id="autoindex" tabindex="-1"><a class="header-anchor" href="#autoindex" aria-hidden="true">#</a> autoindex</h4><p>开启 autoindex 可访问文件根目录</p><h2 id="反向代理" tabindex="-1"><a class="header-anchor" href="#反向代理" aria-hidden="true">#</a> 反向代理</h2><h4 id="我们在服务器上跑一个-node-项目-配置用-域名-来代替-ip-端口-访问" tabindex="-1"><a class="header-anchor" href="#我们在服务器上跑一个-node-项目-配置用-域名-来代替-ip-端口-访问" aria-hidden="true">#</a> 我们在服务器上跑一个 node 项目，配置用 域名 来代替 ip + 端口 访问</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>server <span class="token punctuation">{</span>
  listen       <span class="token number">80</span><span class="token punctuation">;</span>
  server_name  nginx<span class="token punctuation">.</span>deeruby<span class="token punctuation">.</span>com<span class="token punctuation">;</span>
  location <span class="token operator">/</span> <span class="token punctuation">{</span>
    proxy_pass <span class="token operator">&lt;</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3002</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其含义为用户访问 nginx.deeruby.com‾\\underline{nginx.deeruby.com}nginx.deeruby.com 的时候，将其反向代理到 127.0.0.1:3002‾\\underline{127.0.0.1:3002}127.0.0.1:3002 上</p><h4 id="解决跨域" tabindex="-1"><a class="header-anchor" href="#解决跨域" aria-hidden="true">#</a> 解决跨域</h4><p>tips：实际工作中，解决跨域一般为后端配置 CORS，详见笔者 20分钟，巩固你的HTTP知识体系 这篇文章中 HTTP请求方法 里 Options 部分</p><h5 id="hosts-配置" tabindex="-1"><a class="header-anchor" href="#hosts-配置" aria-hidden="true">#</a> hosts 配置</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span>       nginx<span class="token punctuation">.</span>deeruby<span class="token punctuation">.</span>com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h6 id="nginx-配置" tabindex="-1"><a class="header-anchor" href="#nginx-配置" aria-hidden="true">#</a> nginx 配置</h6><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>server <span class="token punctuation">{</span>
  listen       <span class="token number">80</span><span class="token punctuation">;</span>
  server_name  nginx<span class="token punctuation">.</span>deeruby<span class="token punctuation">.</span>com<span class="token punctuation">;</span>

  location <span class="token operator">/</span> <span class="token punctuation">{</span>
    proxy_pass <span class="token operator">&lt;</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">8080</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
   location <span class="token operator">/</span>api <span class="token punctuation">{</span>
      proxy_pass <span class="token operator">&lt;</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3002</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
      proxy_set_header Host $host<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>其含义为用户访问 nginx.deeruby.com‾\\underline{nginx.deeruby.com}nginx.deeruby.com 的时候，将其反向代理到 127.0.0.1:8080‾\\underline{127.0.0.1:8080}127.0.0.1:8080 上（前端部分）；</li><li>访问 nginx.deeruby.com/api‾\\underline{nginx.deeruby.com/api}nginx.deeruby.com/api 的时候，将其反向代理到 127.0.0.1:3002/api‾\\underline{127.0.0.1:3002/api}127.0.0.1:3002/api 上（后端部分）；此时前后端同域，以此解决跨域问题。</li><li>proxy_set_header Host $host;：用来在后端获取用户发送过来的请求头，我们看图说话，第一行输出为没配置该指令，第二行为配置了该指令</li></ul><h2 id="https" tabindex="-1"><a class="header-anchor" href="#https" aria-hidden="true">#</a> HTTPS</h2><h3 id="配置https" tabindex="-1"><a class="header-anchor" href="#配置https" aria-hidden="true">#</a> 配置HTTPS</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>server <span class="token punctuation">{</span>
  listen <span class="token number">443</span> ssl<span class="token punctuation">;</span>                                      # 采用<span class="token number">443</span>端口，开启ssl
  listen <span class="token punctuation">[</span><span class="token operator">:</span><span class="token operator">:</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token number">443</span> ssl<span class="token punctuation">;</span>
  server_name sso<span class="token punctuation">.</span>deeruby<span class="token punctuation">.</span>com<span class="token punctuation">;</span>

  # 证书配置
  ssl_certificate <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>ssl<span class="token operator">/</span>sso<span class="token operator">/</span>full_chain<span class="token punctuation">.</span>pem<span class="token punctuation">;</span>   # pem 文件路径
  ssl_certificate_key <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>ssl<span class="token operator">/</span>sso<span class="token operator">/</span><span class="token keyword">private</span><span class="token punctuation">.</span>key<span class="token punctuation">;</span>  # key 文件路径

  ssl_session_cache shared<span class="token operator">:</span><span class="token constant">SSL</span><span class="token operator">:</span>1m<span class="token punctuation">;</span>                     # 共享缓存大小
  ssl_session_timeout 5m<span class="token punctuation">;</span>                              # 超时时间
  ssl_ciphers <span class="token constant">HIGH</span><span class="token operator">:</span><span class="token operator">!</span>aNULL<span class="token operator">:</span><span class="token operator">!</span><span class="token constant">MD5</span><span class="token punctuation">;</span>                        # 加密算法
  ssl_prefer_server_ciphers on<span class="token punctuation">;</span>                        # 优先采取服务器算法

  location <span class="token operator">/</span> <span class="token punctuation">{</span>
    proxy_pass http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3002</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="访问-http-自动跳转至-https" tabindex="-1"><a class="header-anchor" href="#访问-http-自动跳转至-https" aria-hidden="true">#</a> 访问 HTTP 自动跳转至 HTTPS</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>server <span class="token punctuation">{</span>
  listen       <span class="token number">80</span><span class="token punctuation">;</span>
  server_name  sso<span class="token punctuation">.</span>deeruby<span class="token punctuation">.</span>com<span class="token punctuation">;</span>
  rewrite <span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">)</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>$server_name$1 permanent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="rewrite" tabindex="-1"><a class="header-anchor" href="#rewrite" aria-hidden="true">#</a> rewrite</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>rewrite   <span class="token operator">&lt;</span>regex<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>replacement<span class="token operator">&gt;</span>       <span class="token punctuation">[</span>flag<span class="token punctuation">]</span>
            正则       跳转后的内容   rewrite支持的flag标记
<span class="token punctuation">[</span>flag<span class="token punctuation">]</span>：permanent <span class="token operator">--</span> <span class="token number">301</span> 永久重定向；redirect <span class="token operator">--</span> <span class="token number">302</span> 临时重定向；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,67),u={href:"https://sso.deeruby.com/%E8%B7%AF%E5%BE%84%E2%80%BE%5Cunderline",target:"_blank",rel:"noopener noreferrer"},v={href:"https://sso.deeruby.com/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://sso.deeruby.com/",target:"_blank",rel:"noopener noreferrer"},k=i(`<h2 id="图片防盗链" tabindex="-1"><a class="header-anchor" href="#图片防盗链" aria-hidden="true">#</a> 图片防盗链</h2><ul><li>引言：referer请求头用于识别访问来源，以此来配置防盗链。</li><li>valid_referers：设置可访问资源的规则，其不允许的规则 $invalid_referer 值为1，对不允许的规则返回403。 字段 含义</li><li>none 允许没有 referer 字段的请求访问资源</li><li>blocked 允许非 HTTP(S) 开头的请求访问资源</li><li>server_names 允许指定域名 / IP 访问资源</li><li>[string] 正则匹配定义可访问资源的网址</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>location <span class="token operator">~</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">static</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token operator">*</span>\\<span class="token punctuation">.</span><span class="token punctuation">(</span>jpg<span class="token operator">|</span>jpeg<span class="token operator">|</span>png<span class="token operator">|</span>gif<span class="token operator">|</span>webp<span class="token punctuation">)</span>$ <span class="token punctuation">{</span>
  root <span class="token operator">/</span>home<span class="token punctuation">;</span>
valid_referers<span class="token operator">*</span><span class="token punctuation">.</span>deeruby<span class="token punctuation">.</span>com<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>$invalid_referer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">403</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述配置表示只有 ∗.deeruby.com*.deeruby.com∗.deeruby.com 可访问该资源，否则403报错</p><h2 id="访问限制" tabindex="-1"><a class="header-anchor" href="#访问限制" aria-hidden="true">#</a> 访问限制</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>location <span class="token operator">/</span><span class="token keyword">static</span> <span class="token punctuation">{</span>
  root <span class="token operator">/</span>home<span class="token punctuation">;</span>
  allow <span class="token number">39</span><span class="token punctuation">.</span>xxx<span class="token punctuation">.</span>xxx<span class="token punctuation">.</span>xxx<span class="token punctuation">;</span>  # allow 允许
  deny all<span class="token punctuation">;</span>              # deny  拒绝
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表示允许 39.xxx.xxx.xxx 访问该目录，禁止其它所有 IP 访问，其生效顺序为谁先触发谁起作用。</p><h2 id="禁用请求方法" tabindex="-1"><a class="header-anchor" href="#禁用请求方法" aria-hidden="true">#</a> 禁用请求方法</h2><p>仅允许使用 GET、POST、HEAD、OPTIONS 这四种请求，使用其余请求返回403</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>$request_method <span class="token operator">!</span><span class="token operator">~</span> <span class="token operator">^</span><span class="token punctuation">(</span><span class="token constant">GET</span><span class="token operator">|</span><span class="token constant">POST</span><span class="token operator">|</span><span class="token constant">HEAD</span><span class="token operator">|</span><span class="token constant">OPTIONS</span><span class="token punctuation">)</span>$<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token number">403</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="缓存" tabindex="-1"><a class="header-anchor" href="#缓存" aria-hidden="true">#</a> 缓存</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>expires 7d<span class="token punctuation">;</span>  # 缓存<span class="token number">7</span>天
expires <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  # 不缓存
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pc端和移动端使用不同项目" tabindex="-1"><a class="header-anchor" href="#pc端和移动端使用不同项目" aria-hidden="true">#</a> PC端和移动端使用不同项目</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>location <span class="token operator">/</span> <span class="token punctuation">{</span>
  root <span class="token operator">/</span>home<span class="token operator">/</span><span class="token keyword">static</span><span class="token operator">/</span>pc<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>$http_user_agent <span class="token operator">~</span><span class="token operator">*</span> <span class="token string">&#39;(mobile|android|iphone|ipod|phone)&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    root <span class="token operator">/</span>home<span class="token operator">/</span><span class="token keyword">static</span><span class="token operator">/</span>mobile<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  index index<span class="token punctuation">.</span>html<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：条件语句中不能使用别名，若有需求，可采取折中方案，重定向移动端网址</p><h2 id="负载均衡" tabindex="-1"><a class="header-anchor" href="#负载均衡" aria-hidden="true">#</a> 负载均衡</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>upstream backserver <span class="token punctuation">{</span>              # 存放负载均衡所需变量
  ip_hash<span class="token punctuation">;</span>                         # 根据用户访问 <span class="token constant">IP</span> 的 hash 分配，这样每个访客固定访问一个后端服务，可有效解决动态网页存在的 session 共享问题
  # fair<span class="token punctuation">;</span>                          # 根据页面大小和加载时间长短智能地进行负载均衡，响应时间短的优先分配
  server <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">9090</span><span class="token punctuation">;</span> 
  server <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">8080</span> weight<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>  # 加权，权重越大，被访问概率越大
  server <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">7070</span> down<span class="token punctuation">;</span>      # 该 server 不参与负载均衡
  server <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6060</span> backup<span class="token punctuation">;</span>    # 其余 server 均不可用时，使用这个
<span class="token punctuation">}</span>
server <span class="token punctuation">{</span>
  location <span class="token operator">/</span> <span class="token punctuation">{</span>
    proxy_pass http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>backserver<span class="token punctuation">;</span>  # 接入负载均衡相关配置
    proxy_redirect <span class="token keyword">default</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="限速限流" tabindex="-1"><a class="header-anchor" href="#限速限流" aria-hidden="true">#</a> 限速限流</h2><p>limit_conn 连接频率限制：TCP连接</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>limit_conn_zone $binary_remote_addr zone<span class="token operator">=</span>conname<span class="token operator">:</span>10m<span class="token punctuation">;</span>
server <span class="token punctuation">{</span>
   limit_conn conname <span class="token number">3</span><span class="token punctuation">;</span>  # 每个 <span class="token constant">IP</span> 只能发起<span class="token number">3</span>个连接
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>limit_req 请求频率限制：API请求</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>limit_req_zone $binary_remtoe_addr zone<span class="token operator">=</span>conname<span class="token operator">:</span>1m rate<span class="token operator">=</span>10r<span class="token operator">/</span>s<span class="token punctuation">;</span>
server <span class="token punctuation">{</span>
   limit_req zone<span class="token operator">=</span>conname burst<span class="token operator">=</span><span class="token number">5</span> nodelay<span class="token punctuation">;</span>  # 最大请求数为<span class="token number">5</span>，且超过的请求不延迟
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>内容 含义</p><ul><li>$binary_remote_addr 这里填写的是限流对象，我们采用客户端IP</li><li>zone=conname 给共享空间设置名称为：conname</li><li>10m 空间大小：10兆</li><li>rate 速率，上述表示每秒最多发起10个请求</li><li>limit_conn 限制每个name对应的连接数</li><li>limit_req 限制每个name对应的请求数</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>server <span class="token punctuation">{</span>
   limit_rate_after 10m<span class="token punctuation">;</span>  # 前<span class="token number">10</span>兆大小不限速
   limit_rate 100k<span class="token punctuation">;</span>       # 限速为 100KB<span class="token operator">/</span>秒
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里可用 ab 命令进行压测 ab -n[number] -c[number] -k url 字段 含义</p><ul><li>-n 一共发送多少请求</li><li>-c 同时发送多少请求</li><li>-k keep-alive</li></ul><h2 id="其它" tabindex="-1"><a class="header-anchor" href="#其它" aria-hidden="true">#</a> 其它</h2><h3 id="开启gzip" tabindex="-1"><a class="header-anchor" href="#开启gzip" aria-hidden="true">#</a> 开启gzip</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>gzip on<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,30);function h(b,g){const s=o("ExternalLinkIcon");return p(),r("div",null,[d,a("p",null,[n("故上文配置表示将当前路径永久重定向到 "),a("a",u,[n("https://sso.deeruby.com/路径‾\\underline"),e(s)]),n("{ "),a("a",v,[n("https://sso.deeruby.com/"),e(s)]),n("路径 }"),a("a",m,[n("https://sso.deeruby.com/"),e(s)]),n("路径 上")]),k])}const _=t(c,[["render",h],["__file","index.html.vue"]]);export{_ as default};
