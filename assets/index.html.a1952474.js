import{_ as n,z as s,A as a,a6 as e}from"./framework.fef63301.js";const p={},t=e(`<h1 id="用-node-js-脚本替代复杂的-npm-script" tabindex="-1"><a class="header-anchor" href="#用-node-js-脚本替代复杂的-npm-script" aria-hidden="true">#</a> 用 node.js 脚本替代复杂的 npm script</h1><h2 id="_1-安装-shelljs-依赖" tabindex="-1"><a class="header-anchor" href="#_1-安装-shelljs-依赖" aria-hidden="true">#</a> 1. 安装 shelljs 依赖</h2><p>使用如下命令安装 shelljs 到项目依赖中：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm i shelljs <span class="token operator">-</span><span class="token constant">D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此外，我们计划使用 chalk 来给输出加点颜色，让脚本变的更有趣，同样安装到 devDependencies 里面：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm i chalk <span class="token operator">-</span><span class="token constant">D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-创建-node-js-脚本" tabindex="-1"><a class="header-anchor" href="#_2-创建-node-js-脚本" aria-hidden="true">#</a> 2. 创建 Node.js 脚本</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>touch scripts<span class="token operator">/</span>cover<span class="token punctuation">.</span>js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-用-node-js-实现同等功能" tabindex="-1"><a class="header-anchor" href="#_3-用-node-js-实现同等功能" aria-hidden="true">#</a> 3. 用 Node.js 实现同等功能</h2><p>shelljs 为我们提供了各种常见命令的跨平台支持，比如 cp、mkdir、rm、cd 等命令，此外，理论上你可以在 Node.js 脚本中使用任何 npmjs.com 上能找到的包。清理归档目录、运行测试、归档并预览覆盖率报告的完整 Node.js 代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> rm<span class="token punctuation">,</span> cp<span class="token punctuation">,</span> mkdir<span class="token punctuation">,</span> exec<span class="token punctuation">,</span> echo<span class="token punctuation">,</span> env <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;shelljs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> chalk <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;chalk&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> npm_package_version <span class="token operator">=</span> env<span class="token punctuation">[</span><span class="token string">&#39;npm_package_version&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token string">&#39;1. remove old coverage reports...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">rm</span><span class="token punctuation">(</span><span class="token string">&#39;-rf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;coverage&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">rm</span><span class="token punctuation">(</span><span class="token string">&#39;-rf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.nyc_output&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token string">&#39;2. run test and collect new coverage...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;nyc --reporter=html npm run test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token string">&#39;3. archive coverage report by version...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string">&#39;-p&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;coverage_archive/&#39;</span> <span class="token operator">+</span> npm_package_version<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">cp</span><span class="token punctuation">(</span><span class="token string">&#39;-r&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;coverage/*&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;coverage_archive/&#39;</span> <span class="token operator">+</span> npm_package_version<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token string">&#39;4. open coverage report for preview...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;npm-run-all --parallel cover:serve cover:open&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),c=[t];function o(i,l){return s(),a("div",null,c)}const r=n(p,[["render",o],["__file","index.html.vue"]]);export{r as default};
