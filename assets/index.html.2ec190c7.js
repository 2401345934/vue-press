import{_ as n,z as s,A as a,a6 as t}from"./framework.fef63301.js";const p={},e=t(`<h1 id="packager-version" tabindex="-1"><a class="header-anchor" href="#packager-version" aria-hidden="true">#</a> packager-version</h1><h2 id="解决问题" tabindex="-1"><a class="header-anchor" href="#解决问题" aria-hidden="true">#</a> 解决问题</h2><ul><li>每次提交代码自动修改 package.json 的version 版本</li><li>配合 changelog 使用更佳</li></ul><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式" aria-hidden="true">#</a> 使用方式</h2><ul><li>项目根目录增加 version.mjs 文件</li><li>下载依赖</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>yarn add prompts zx <span class="token operator">-</span><span class="token constant">D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>package.json 文件 新增 一个 script 命令</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;zx version.mjs&quot;</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>version.mjs 内容</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env zx</span>
<span class="token doc-comment comment">/**
 * * 自动升级版本号并打标签 *
 * 相当于修改package.json里面version字段值，然后git commit -m &#39;xxx&#39;，再git tag -a $<span class="token punctuation">{</span>version<span class="token punctuation">}</span>
 * */</span>
 
<span class="token comment">// https://github.com/google/zx</span>
<span class="token keyword">import</span> <span class="token string">&#39;zx/globals&#39;</span>
<span class="token keyword">const</span> filename <span class="token operator">=</span> <span class="token string">&#39;./package.json&#39;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> version <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>
<span class="token keyword">const</span> prompts <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;prompts&#39;</span><span class="token punctuation">)</span>
 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">blue</span><span class="token punctuation">(</span><span class="token string">&#39;Long long ago, there is a tiger.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Current version: &#39;</span> <span class="token operator">+</span> version<span class="token punctuation">)</span>
 
<span class="token keyword">const</span> <span class="token punctuation">[</span>major<span class="token punctuation">,</span> minor<span class="token punctuation">,</span> patch<span class="token punctuation">]</span> <span class="token operator">=</span> version<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> nextMajor <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>major<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;.0.0&#39;</span>
<span class="token keyword">const</span> nextMinor <span class="token operator">=</span> major <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>minor<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;.0&#39;</span>
<span class="token keyword">const</span> nextPatch <span class="token operator">=</span> major <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> minor <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>patch<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
 
<span class="token keyword">const</span> questions <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;dish&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Would you like some cocktail? &#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;select&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;version&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Which part do you want to bump? &#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">choices</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;patch: &#39;</span> <span class="token operator">+</span> nextPatch<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> nextPatch <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;minor: &#39;</span> <span class="token operator">+</span> nextMinor<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> nextMinor <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;major: &#39;</span> <span class="token operator">+</span> nextMajor<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> nextMajor <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">type</span><span class="token operator">:</span> <span class="token parameter">prev</span> <span class="token operator">=&gt;</span> prev <span class="token operator">&amp;&amp;</span> <span class="token string">&#39;confirm&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;commit&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;是否执行git commit提交代码？&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">initial</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">type</span><span class="token operator">:</span> <span class="token parameter">prev</span> <span class="token operator">=&gt;</span> prev <span class="token operator">&amp;&amp;</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;git commit的内容(留空则使用&#39;Bump version&#39;)：&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">type</span><span class="token operator">:</span> <span class="token parameter">prev</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>prev <span class="token operator">||</span> prev <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string">&#39;confirm&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;tag&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;是否执行git tag打标签？&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">initial</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
 
<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">prompts</span><span class="token punctuation">(</span>questions<span class="token punctuation">)</span>
<span class="token keyword">const</span> newVersion <span class="token operator">=</span> response<span class="token punctuation">.</span>version
<span class="token keyword">if</span> <span class="token punctuation">(</span>newVersion<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>
  <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;version&quot;: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;version&quot;: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>newVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> content<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token string">&#39;\`package.json\` updated!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>commit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> message <span class="token operator">=</span> response<span class="token punctuation">.</span>message
  <span class="token keyword">if</span> <span class="token punctuation">(</span>message <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bump version: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> → </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>newVersion<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// console.log(\`git add . &amp;&amp; git commit -m &#39;\${message}&#39;\`)</span>
    <span class="token keyword">await</span> $<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">git add . &amp;&amp; git commit -m </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> tag <span class="token operator">=</span> <span class="token string">&#39;v&#39;</span> <span class="token operator">+</span> newVersion
      <span class="token comment">// console.log(\`git tag -a \${tag} -m &#39;&#39;\`)</span>
      <span class="token keyword">await</span> $<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">git tag -a </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> -m &#39;&#39;</span><span class="token template-punctuation string">\`</span></span>
      <span class="token keyword">await</span> $<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">git push &amp;&amp; git push --tags</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// message === undefined的情况</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">yellow</span><span class="token punctuation">(</span><span class="token string">&#39;I can see the first leaf falling.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[e];function c(i,l){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","index.html.vue"]]);export{u as default};
