import{_ as e,z as o,A as c,X as n,C as s,T as t,a6 as p,Q as i}from"./framework.fef63301.js";const l={},u=p('<h1 id="数据埋点起步" tabindex="-1"><a class="header-anchor" href="#数据埋点起步" aria-hidden="true">#</a> 数据埋点起步</h1><h2 id="认识数据埋点-sdk" tabindex="-1"><a class="header-anchor" href="#认识数据埋点-sdk" aria-hidden="true">#</a> 认识数据埋点 SDK</h2><blockquote><p><strong>SDK</strong> 全称是 <strong>Software Development Kit</strong> 即 软件开发工具包，一般都是一些软件工程师为特定的软件包、软件框架、硬件平台、操作系统等建立应用软件时的开发工具的集合。</p></blockquote><h2 id="为什么需要前端数据埋点" tabindex="-1"><a class="header-anchor" href="#为什么需要前端数据埋点" aria-hidden="true">#</a> 为什么需要前端数据埋点？</h2><p>对产品本身而言，我们需要关注内容包括如下几个方面：</p><ul><li>用户在产品里 主要做什么操作、停留多久、访问几次</li><li>用户点击率占比如何，会不会出现某些功能设计对于用户而言是无效的</li><li>用户在核心使用流程上是否顺畅，页面反馈是否正常友好</li><li>可能有哪些潜在的用户的功能需要更新</li></ul><p>总的来说，<strong>数据埋点</strong> 核心是为了 <strong>收集数据</strong>（~有了数据就可以为所欲为~），只有通过分析数据，才能更好的评估出整个项目的质量和重要性（~数据为王~），并且能够为产品优化指明方向（<strong>数据驱动产品</strong>）。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f830ec5729d84df3aa6515ad82db154f~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt="7DBB34CE.jpg"></p><h2 id="前端数据埋点要考虑哪些方面" tabindex="-1"><a class="header-anchor" href="#前端数据埋点要考虑哪些方面" aria-hidden="true">#</a> 前端数据埋点要考虑哪些方面？</h2><p>数据埋点的核心是数据收集，而与数据相关的内容不外乎如下几个内容：</p><ul><li>数据又是基于应用产生的，因为没有应用就不会有相关的数据</li><li>应用本身要提供展示、收集、操作内容，而这是基于平台的，比如网站就是基于浏览器平台</li><li>有应用、有平台就得有用户，因为应用本身就是为了给用户提供好用的功能去解决某些存在的问题</li><li>针对开发者而言，应用就是代码，代码运行的质量也能决定应用的质量，而显式质量体现在错误或警告上</li></ul><p>总结下来，数据埋点其实要考虑的就是 <strong>用户行为、错误警告、页面性能</strong> 三个核心方面。</p><h3 id="用户行为" tabindex="-1"><a class="header-anchor" href="#用户行为" aria-hidden="true">#</a> 用户行为</h3><p>用户行为就是在网页应用中进行的一系列操作，但用户的操作有很多种，都需要记录下来是不可能的，一般需要记录用户的以下几种行为：</p><ul><li><strong>用户浏览页面次数，PV（Page View）</strong><ul><li>用户每次访问网站中的一个页面就被记录为 <code>1</code> 个 <code>PV</code>，多次访问同一个页面，访问量就会累计</li></ul></li><li><strong>页面浏览用户数，UV（Unique visitor）</strong><ul><li>通过网络正常访问页面的使用者，通常一台电脑客户端或一个用户账号为一个访客，一般同一个客户端或用户账号在 <code>24h</code> 内多次访问只会被记录为 <code>1</code> 个 <code>UV</code>，计算策略视具体情况而定</li></ul></li><li><strong>用户点击按钮次数</strong><ul><li>以上两种可以认为是 <strong><code>自动式触发埋点</code></strong>，而点击按钮次数就属于是 <strong><code>互动式触发埋点</code></strong>，便于去了解这个功能按钮的使用情况</li></ul></li></ul><h3 id="错误警告" tabindex="-1"><a class="header-anchor" href="#错误警告" aria-hidden="true">#</a> 错误警告</h3><p>页面中代码运行产生的错误，可能会导致用户核心操作流程被中断，为了避免大量用户受到影响，我们需要获取 <strong>生产环境的错误数据</strong>，这样才能便于开发者及时进行修复。</p><p>通常来讲代码中的错误会包含以下几大类：</p><ul><li><strong>全局错误</strong>，即未被捕获的错误</li><li><strong>局部错误</strong>，即通过 <code>try...catch、promise.then、promise.catch</code> 等捕获的错误</li><li><strong>接口请求错误</strong>，即在二次封装请求 <code>API</code> 中进行请求和接收响应时的错误</li><li><strong>组件级错误</strong>，即使用 <code>Vue/React</code> 组件时发生的错误</li></ul><h3 id="页面性能" tabindex="-1"><a class="header-anchor" href="#页面性能" aria-hidden="true">#</a> 页面性能</h3><p>页面性能其实也是前端性能优化中一个需要考虑和优化的点，毕竟如果一个网站老是发生 <strong>白屏、交互卡顿、页面资源加载时间长</strong> 等问题，肯定是没办法留住用户的，特别是用户的真实环境各不相同，如 <code>Windows x、MACOS、Android、iOS</code> 等，更加需要统计和收集相关数据，便于进行集中优化处理，提升用户体验。</p>',21),r={href:"https://juejin.cn/post/7137058832592666655",title:"https://juejin.cn/post/7137058832592666655",target:"_blank",rel:"noopener noreferrer"},d=n("strong",null,"前端性能优化到底该怎么做（上）— 开门见山",-1),k=p(`<ul><li><p><strong>首次绘制（<code>First Paint，FP</code>）</strong></p><ul><li>在渲染进程确认要渲染当前响应资源后，渲染进程会先创建一个空白页面，通常把创建空白页面的这个时间点称为 <code>First Paint</code>，简称 <code>FP</code></li><li>所谓的 <strong>白屏时间</strong> 其实指的就是创建这个空白页面到浏览器开始渲染非空白内容的时间，比如页面背景发生变化等</li></ul></li><li><p><strong>首次内容绘制（<code>First Contentful Paint，FCP</code>）</strong></p><ul><li>当用户看见一些 &quot;内容&quot; 元素被绘制在页面上的时间点，和白屏是不一样，它可以是 <strong><code>文本</code></strong> 首次绘制，或 <code>SVG</code> 首次出现，或 <code>Canvas</code> 首次绘制等，即当页面中绘制了第一个 <strong>像素</strong> 时，这个时间点称为 <code>First Content Paint</code>，简称 <code>FCP</code></li></ul></li><li><p><strong>首屏时间 / 最大内容绘制（<code>Largest Contentful Paint, LCP</code>）</strong></p><ul><li><code>LCP</code> 是一种新的性能度量标准，<code>LCP</code> 侧重于用户体验的性能度量标准，与现有度量标准相比，更容易理解与推理，当首屏内容完全绘制完成时，这个时间点称为 <code>Largest Content Paint</code>，简称 <code>LCP</code></li><li><strong>最大内容绘制应在 <code>2.5s</code> 内完成</strong></li></ul></li><li><p><strong>首次输入延迟（<code>First Input Delay, FID</code>）</strong></p><ul><li><code>FID</code> 测量的是当用户第一次在页面上交互的时候（<strong>点击链接</strong>、<strong>点击按钮</strong> 或 <strong>自定义基于 <code>js</code> 的事件</strong>），到浏览器实际开始处理这个事件的时间</li><li><strong>首次输入延迟应在 <code>100ms</code> 内完成</strong></li></ul></li><li><p><strong>累积布局偏移（<code>Cumulative Layout Shift, CLS</code>)</strong></p><ul><li><code>CLS</code> 是为了测量 <strong>视觉稳定性</strong>，以便提供良好的用户体验</li><li><strong>累积布局偏移应保持在 <code>0.1</code> 或更少</strong></li></ul></li><li><p><strong>首字节达到时间（<code>Time to First Byte，TTFB</code>）</strong></p><ul><li>指的是浏览器开始收到服务器响应数据的时间（<strong>后台处理时间 + 重定向时间</strong>），是反映服务端响应速度的重要指标</li><li><strong><code>TTFB</code> 时间如果超过 <code>500ms</code>，用户在打开网页的时就会感觉到明显的等待</strong></li></ul></li></ul><p>理解了 为什么要做前端数据埋点 和 前端数据埋点所需要统计数据的方方面面，接下来我们就需要设计一个自己的 <strong>前端数据埋点 SDK</strong> 了。</p><h2 id="设计前端数据埋点-sdk" tabindex="-1"><a class="header-anchor" href="#设计前端数据埋点-sdk" aria-hidden="true">#</a> 设计前端数据埋点 SDK</h2><p>这里只我们考虑数据埋点的核心内容，因此不会涉及得肯定没有那么全面，而一开始也不可能设计得全面，只要保证核心功能，那么在基于核心进行扩展即可。</p><h2 id="确定-options-和-data-内容" tabindex="-1"><a class="header-anchor" href="#确定-options-和-data-内容" aria-hidden="true">#</a> 确定 options 和 data 内容</h2><h3 id="应用的唯一标识-—-options-appid" tabindex="-1"><a class="header-anchor" href="#应用的唯一标识-—-options-appid" aria-hidden="true">#</a> 应用的唯一标识 — options.AppId</h3><p><strong>数据埋点 SDK</strong> 作为一个通用的工具集，是可供多个系统进行使用的，而这就意味着需要去保证每个应用的唯一性，一般来讲，在初始化 <strong>SDK</strong> 的时候是需要接入方提供的当前应用的 <strong>ID</strong>。</p><p>那这个 <strong>ID</strong> 从何而来？随便生成吗？一般来说需要经过如下步骤：</p><ul><li>在对应监控系统上为当前应用生成唯一的 <strong>AppId</strong></li><li>在对应应用接入 <strong>SDK</strong> 时作为配置项之一传入</li></ul><p>其实还会涉及到请求 <code>url</code> 内容，主要用于发送给对应的监控系统，因此 <code>options</code> 核心内容简单设计如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  appId: &#39;&#39;, // 当前应用唯一标识
  baseUrl: &#39;&#39;, // 数据发送的地址
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据发送格式-—-data" tabindex="-1"><a class="header-anchor" href="#数据发送格式-—-data" aria-hidden="true">#</a> 数据发送格式 — data</h3><p>由于需要收集的数据类型包含多种，最好能够定义一种比较通用的数据格式，便于更友好地进行数据收集。</p><p>这里简单定义一下数据格式，大致如下，格式随需求场景产生差异：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
  appId: &#39;&#39;, // 当前应用唯一标识
  type: &#39;action&#39; | &#39;performance&#39;| &#39;network&#39; | &#39;error&#39;, // 不同数据类型
  pageUrl: &#39;&#39;, // 页面地址
  apiUrl: &#39;&#39;, // 接口地址
  userId: &#39;&#39;, // 当前用户 id
  userName: &#39;&#39;, // 当前用户 name
  time: &#39;&#39;,// 触发记录的时间
  data: {}, // 接口响应结果 | 性能指标 | 错误对象 | 用户操作相关信息
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="确定数据发送方式" tabindex="-1"><a class="header-anchor" href="#确定数据发送方式" aria-hidden="true">#</a> 确定数据发送方式</h2><p>如果要问前端埋点最基本要实现的功能是什么，那必然是 <strong>数据发送</strong> 的能力，否则即便有应用、有用户、有数据也只能保存在本地没法发送给相应的监控系统，意味就没法进行收集和统计（~数据等于白给~）。</p><p>那么数据发送都有什么方式呢？针对这个问题把 <strong>数据发送</strong> 翻译成 <strong>请求发送</strong> 就容易多了，转而问题就变成了 请求发送方式都有哪些？</p><p>一般会包括如下几种（包括但不限于）：</p><ul><li><strong><code>XMLHttpRequest</code></strong></li><li><strong><code>fetch</code></strong></li><li><strong><code>form</code> 表单的 <code>action</code></strong></li><li><strong>基于元素 <code>src</code> 属性的请求</strong><ul><li><code>img</code> 标签的 <code>src</code></li><li><code>script</code> 标签的 <code>src</code></li></ul></li><li><strong><code>Navigator.sendBeacon()</code></strong></li></ul>`,20),v=n("strong",null,[n("code",null,"Navigator.sendBeacon()")],-1),m={href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FHTTP%2FMethods%2FPOST",title:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Methods/POST",target:"_blank",rel:"noopener noreferrer"},b=n("strong",null,"HTTP POST",-1),g={href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FGlossary%2FAsynchronous",title:"https://developer.mozilla.org/zh-CN/docs/Glossary/Asynchronous",target:"_blank",rel:"noopener noreferrer"},h=n("strong",null,"异步",-1),f=n("code",null,"Web",-1),y={href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FNavigator%2FsendBeacon",title:"https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator/sendBeacon",target:"_blank",rel:"noopener noreferrer"},w=n("strong",null,[n("code",null,"传送门")],-1),_=p(`<h2 id="sdk-核心代码" tabindex="-1"><a class="header-anchor" href="#sdk-核心代码" aria-hidden="true">#</a> SDK 核心代码</h2><p>这里我们只考虑极简情况，设计好的 <strong>SDK</strong> 代码内容比较简单，直接上代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token constant">SDK</span> <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token comment">// EasyAgentSDK 实例对象</span>
<span class="token keyword">const</span> <span class="token constant">QUEUE</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 任务队列</span>
cosnt <span class="token function-variable function">NOOP</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v

<span class="token comment">// 通过 web-vitals 页面性能指标</span>
<span class="token keyword">const</span> <span class="token function-variable function">reportWebVitals</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">onPerfEntry</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>onPerfEntry <span class="token operator">&amp;&amp;</span> onPerfEntry <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;web-vitals&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> getCLS<span class="token punctuation">,</span> getFID<span class="token punctuation">,</span> getFCP<span class="token punctuation">,</span> getLCP<span class="token punctuation">,</span> getTTFB <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">getCLS</span><span class="token punctuation">(</span>onPerfEntry<span class="token punctuation">)</span> <span class="token comment">// 布局偏移量</span>
      <span class="token function">getFID</span><span class="token punctuation">(</span>onPerfEntry<span class="token punctuation">)</span> <span class="token comment">// 首次输入延迟时间</span>
      <span class="token function">getFCP</span><span class="token punctuation">(</span>onPerfEntry<span class="token punctuation">)</span> <span class="token comment">// 首次内容渲染时间</span>
      <span class="token function">getLCP</span><span class="token punctuation">(</span>onPerfEntry<span class="token punctuation">)</span> <span class="token comment">// 首次最大内容渲染时间</span>
      <span class="token function">getTTFB</span><span class="token punctuation">(</span>onPerfEntry<span class="token punctuation">)</span> <span class="token comment">// 首个字节到达时间</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">EasyAgentSDK</span> <span class="token punctuation">{</span>
  appId <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  baseUrl <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  timeOnPage <span class="token operator">=</span> <span class="token number">0</span>
  config <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  onPageShow <span class="token operator">=</span> <span class="token keyword">null</span>
  onPagesHide <span class="token operator">=</span> <span class="token keyword">null</span>
  
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">SDK</span><span class="token punctuation">)</span> <span class="token keyword">return</span>

    <span class="token constant">SDK</span> <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>appId <span class="token operator">=</span> options<span class="token punctuation">.</span>appId
    <span class="token keyword">this</span><span class="token punctuation">.</span>baseUrl <span class="token operator">=</span> options<span class="token punctuation">.</span>baseUrl <span class="token operator">||</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>origin
    <span class="token keyword">this</span><span class="token punctuation">.</span>onPageShow <span class="token operator">=</span> options<span class="token punctuation">.</span>onPageShow <span class="token operator">||</span> <span class="token constant">NOOP</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onPagesHide <span class="token operator">=</span> options<span class="token punctuation">.</span>onPagesHide <span class="token operator">||</span> <span class="token constant">NOOP</span>

    <span class="token comment">// 初始化监听页面变化</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">listenPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// 设置 config</span>
  <span class="token function">setConfig</span><span class="token punctuation">(</span><span class="token parameter">congfig</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>config <span class="token operator">=</span> congfig
  <span class="token punctuation">}</span>

  <span class="token comment">// 刷新任务队列</span>
  <span class="token function">flushQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token constant">QUEUE</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token constant">QUEUE</span><span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 监听页面变化</span>
  <span class="token function">listenPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> pageShowTime <span class="token operator">=</span> <span class="token number">0</span>

    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;pageshow&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      pageShowTime <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      
       <span class="token comment">// 页面性能指标上报</span>
      <span class="token function">reportWebVitals</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">performanceReport</span><span class="token punctuation">(</span><span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      
      <span class="token comment">// 执行 onPageShow</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onPageShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;pagehide&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 记录用户在页面停留时间</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>timeOnPage <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> pageShowTime
      
      <span class="token comment">// 刷新队列前执行 onPageShow</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onPageShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// 刷新任务队列</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">flushQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Json 转 FormData</span>
  <span class="token function">json2FormData</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> formData
  <span class="token punctuation">}</span>

  <span class="token comment">// 自定义上报类型</span>
  <span class="token function">report</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token constant">QUEUE</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token function">json2FormData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">,</span>
        <span class="token operator">...</span>config<span class="token punctuation">,</span>
        <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">appId</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>appId<span class="token punctuation">,</span>
        <span class="token literal-property property">pageUrl</span><span class="token operator">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      navigator<span class="token punctuation">.</span><span class="token function">sendBeacon</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>baseUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>url <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> formData<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 用户行为上报</span>
  <span class="token function">actionReport</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">report</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token operator">...</span>config<span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;action&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 网络状况上报</span>
  <span class="token function">networkReport</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">report</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token operator">...</span>config<span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;network&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 页面性能指标上报</span>
  <span class="token function">performanceReport</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">report</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token operator">...</span>config<span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;performance&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 错误警告上报</span>
  <span class="token function">errorReport</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">report</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token operator">...</span>config<span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="上报用户行为" tabindex="-1"><a class="header-anchor" href="#上报用户行为" aria-hidden="true">#</a> 上报用户行为</h2><h3 id="统计-pv-和-uv-—-自动触发埋点" tabindex="-1"><a class="header-anchor" href="#统计-pv-和-uv-—-自动触发埋点" aria-hidden="true">#</a> 统计 PV 和 UV — 自动触发埋点</h3><p>关于 <strong>PV</strong> 和 <strong>UV</strong> 在上述已经做过介绍了，本质上这两个数据统计都可在一个上报类型为 <code>action</code> 数据发送中获得，主要看监控系统是按照怎样的规则对数据进行分析和统计，这里在 <code>SDK</code> 内部监听了页面的 <code>pageshow / pagehide</code> 两个事件：</p><ul><li>在 <code>pageshow</code> 中可以上报与 <strong>PV / UV</strong> 相关的数据 和 页面性能相关的数据</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token constant">SDK</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EasyAgentSDK</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">appId</span><span class="token operator">:</span> <span class="token string">&#39;application_id&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">baseUrl</span><span class="token operator">:</span> <span class="token string">&#39;//aegis.example.com/collect&#39;</span><span class="token punctuation">,</span>
    <span class="token function">onPageShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        window<span class="token punctuation">.</span><span class="token constant">SDK</span><span class="token punctuation">.</span><span class="token function">actionReport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// 其他必要传递的信息</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span><span class="token constant">SDK</span><span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">userId</span><span class="token operator">:</span> UserInfo<span class="token punctuation">.</span>userId<span class="token punctuation">,</span> <span class="token comment">// 当前用户 id</span>
    <span class="token literal-property property">userName</span><span class="token operator">:</span> UserInfo<span class="token punctuation">.</span>userName<span class="token punctuation">,</span> <span class="token comment">// 当前用户 name</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 <code>pagehide</code> 中主要用于计算用户停留在页面上的时间 <code>timeOnPage</code> 和 刷新任务队列</li></ul><h3 id="统计用户点击按钮-—-交互式触发埋点" tabindex="-1"><a class="header-anchor" href="#统计用户点击按钮-—-交互式触发埋点" aria-hidden="true">#</a> 统计用户点击按钮 — 交互式触发埋点</h3><p>假设我们希望记录某些按钮的使用次数的数据，可以在 <code>document</code> 上监听 <code>click</code> 事件，目的利用事件冒泡以便于不需要侵入不同按钮的 <code>click</code> 事件，比如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> TargetElementFilter <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;export_btn&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token function-variable function">findTarget</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">filters</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> filters<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">filter</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> TargetElementFilter<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> filter <span class="token operator">===</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> className<span class="token punctuation">,</span> outerHTML <span class="token punctuation">}</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>target
  <span class="token keyword">const</span> isTarget <span class="token operator">=</span> <span class="token function">findTarget</span><span class="token punctuation">(</span><span class="token punctuation">[</span>id<span class="token punctuation">,</span> className<span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>isTarget<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token constant">SDK</span><span class="token punctuation">.</span><span class="token function">actionReport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        id<span class="token punctuation">,</span> 
        className<span class="token punctuation">,</span>
        outerHTML
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 其他必要传递的信息</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="上报页面性能" tabindex="-1"><a class="header-anchor" href="#上报页面性能" aria-hidden="true">#</a> 上报页面性能</h2>`,13),P=n("code",null,"SDK",-1),F=n("code",null,"pageshow",-1),j=n("code",null,"reportWebVitals",-1),x=n("code",null,"performanceReport",-1),S=n("code",null,"Google",-1),D={href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fweb-vitals",title:"https://www.npmjs.com/package/web-vitals",target:"_blank",rel:"noopener noreferrer"},E=n("strong",null,[n("code",null,"web-vitals")],-1),C=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 通过 web-vitals 页面性能指标</span>
<span class="token keyword">const</span> <span class="token function-variable function">reportWebVitals</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">onPerfEntry</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>onPerfEntry <span class="token operator">&amp;&amp;</span> onPerfEntry <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;web-vitals&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> getCLS<span class="token punctuation">,</span> getFID<span class="token punctuation">,</span> getFCP<span class="token punctuation">,</span> getLCP<span class="token punctuation">,</span> getTTFB <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">getCLS</span><span class="token punctuation">(</span>onPerfEntry<span class="token punctuation">)</span> <span class="token comment">// 布局偏移量</span>
      <span class="token function">getFID</span><span class="token punctuation">(</span>onPerfEntry<span class="token punctuation">)</span> <span class="token comment">// 首次输入延迟时间</span>
      <span class="token function">getFCP</span><span class="token punctuation">(</span>onPerfEntry<span class="token punctuation">)</span> <span class="token comment">// 首次内容渲染时间</span>
      <span class="token function">getLCP</span><span class="token punctuation">(</span>onPerfEntry<span class="token punctuation">)</span> <span class="token comment">// 首次最大内容渲染时间</span>
      <span class="token function">getTTFB</span><span class="token punctuation">(</span>onPerfEntry<span class="token punctuation">)</span> <span class="token comment">// 首个字节到达时间</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取得到的数据大致如下：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/87deeee2a8d84b249007151d79a6cb85~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt=""></p><h2 id="上报错误警告" tabindex="-1"><a class="header-anchor" href="#上报错误警告" aria-hidden="true">#</a> 上报错误警告</h2><h3 id="全局错误" tabindex="-1"><a class="header-anchor" href="#全局错误" aria-hidden="true">#</a> 全局错误</h3><p>全局错误，即未被捕获的错误，可以通过 <code>window.onerror</code> 事件来捕获，然后进行错误数据上报，大致如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> filename<span class="token punctuation">,</span> message<span class="token punctuation">,</span> error <span class="token punctuation">}</span> <span class="token operator">=</span> reason<span class="token punctuation">;</span>

    window<span class="token punctuation">.</span><span class="token constant">SDK</span><span class="token punctuation">.</span><span class="token function">errorReport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            filename<span class="token punctuation">,</span> 
            message<span class="token punctuation">,</span> 
            error
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="局部错误" tabindex="-1"><a class="header-anchor" href="#局部错误" aria-hidden="true">#</a> 局部错误</h3><p>局部错误，即通过 <code>try...catch、promise.then、promise.catch</code> 等捕获的错误，大致使用如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;error for test&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token constant">SDK</span><span class="token punctuation">.</span><span class="token function">errorReport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        error<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>


  Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Promise reject for test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      window<span class="token punctuation">.</span><span class="token constant">SDK</span><span class="token punctuation">.</span><span class="token function">errorReport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">error</span><span class="token operator">:</span> reason
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>
  
  Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Promise reject for test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      window<span class="token punctuation">.</span><span class="token constant">SDK</span><span class="token punctuation">.</span><span class="token function">errorReport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">error</span><span class="token operator">:</span> reason
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="接口请求错误" tabindex="-1"><a class="header-anchor" href="#接口请求错误" aria-hidden="true">#</a> 接口请求错误</h3><p>接口请求错误，即在二次封装请求 <code>API</code> 中进行请求和接收响应时的错误，为了方便这里以 <code>axios</code> 来举例子，我们可以在它的 <strong>请求拦截</strong> 和 <strong>响应拦截</strong> 的第二个回调参数中去上报对应的错误数据信息，大致如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建axios实例</span>
<span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  baseURL<span class="token punctuation">,</span> <span class="token comment">// api 的 base_url</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">60000</span><span class="token punctuation">,</span> <span class="token comment">// 请求超时时间</span>
  <span class="token literal-property property">responseType</span><span class="token operator">:</span> reqConf<span class="token punctuation">.</span>responseType<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 请求拦截</span>
service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token keyword">return</span> config<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token constant">SDK</span><span class="token punctuation">.</span><span class="token function">errorReport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">apiUrl</span><span class="token operator">:</span> config<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        error<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 响应拦截</span>
service<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">config</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
    <span class="token keyword">return</span> config<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">error</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token constant">SDK</span><span class="token punctuation">.</span><span class="token function">errorReport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">apiUrl</span><span class="token operator">:</span> config<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        error<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="组件级错误" tabindex="-1"><a class="header-anchor" href="#组件级错误" aria-hidden="true">#</a> 组件级错误</h3><p>组件级错误，即使用 <code>Vue / React</code> 框架组件时发生的错误，完全可以使用它们在官方文档中提到的错误捕获方式来捕获并上报错误。</p>`,15),T=n("strong",null,[n("code",null,"Vue")],-1),I={href:"https://link.juejin.cn/?target=https%3A%2F%2Fcn.vuejs.org%2Fapi%2Fapplication.html%23app-config-errorhandler",title:"https://cn.vuejs.org/api/application.html#app-config-errorhandler",target:"_blank",rel:"noopener noreferrer"},K=n("strong",null,[n("code",null,"errorHandler")],-1),U=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// App.vue</span>
    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;error in onMounted&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// main.ts</span>
    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>

    app<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function-variable function">errorHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> info</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        window<span class="token punctuation">.</span><span class="token constant">SDK</span><span class="token punctuation">.</span><span class="token function">errorReport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                instance<span class="token punctuation">,</span>
                info<span class="token punctuation">,</span>
                error
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),L=n("strong",null,[n("code",null,"React")],-1),A={href:"https://link.juejin.cn/?target=https%3A%2F%2Fzh-hans.reactjs.org%2Fdocs%2Ferror-boundaries.html%23introducing-error-boundaries",title:"https://zh-hans.reactjs.org/docs/error-boundaries.html#introducing-error-boundaries",target:"_blank",rel:"noopener noreferrer"},N=n("strong",null,[n("code",null,"ErrorBoundary")],-1),V=n("code",null,"getDerivedStateFromError",-1),R=n("code",null,"componentDidCatch",-1),B=p(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>
    <span class="token comment">// 定义错误边界组件</span>
    <span class="token keyword">class</span> <span class="token class-name">ErrorBoundary</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
      <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">hasError</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">static</span> <span class="token function">getDerivedStateFromError</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 更新 state 使下一次渲染能够显示降级后的 UI</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">hasError</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  
      <span class="token punctuation">}</span>
      <span class="token function">componentDidCatch</span><span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 可以将错误日志上报给服务器</span>
          window<span class="token punctuation">.</span><span class="token constant">SDK</span><span class="token punctuation">.</span><span class="token function">errorReport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                info<span class="token punctuation">,</span>
                error
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>hasError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 自定义降级后的 UI 并渲染      、</span>
            <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Something went wrong.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 使用错误边界组件</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ErrorBoundary</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MyWidget</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ErrorBoundary</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function z(O,H){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("与页面性能指标相关的内容，在之前的 "),n("a",r,[d,t(a)]),s(" 一文中有提到，这里大致总结下：")]),k,n("p",null,[s("这里选择的是最后一种，因为 "),v,s(" 就是专门用于通过 "),n("a",m,[b,t(a)]),s(" 将统计数据 "),n("a",g,[h,t(a)]),s(" 发送到 "),f,s(" 服务器上，同时能避免传统技术发送分析数据的一些问题。")]),n("blockquote",null,[n("p",null,[n("strong",null,[s("传统技术发送统计数据的一些问题，可以直接通过 "),n("a",y,[w,t(a)]),s(" 查看，由于文章篇幅有限不在额外解释。")])])]),_,n("p",null,[s("和页面性能相关的内容，属于 "),P,s(" 自动触发埋点，不应该让使用者在手动接入，在上面的实现中，我们在 "),F,s(" 事件中通 "),j,s(" 和 "),x,s(" 进行数据上报，并且这里选择了 "),S,s(" 推出的 "),n("a",D,[E,t(a)]),s(" 来获取和页面性能指标相关的具体数据，对应代码为：")]),C,n("ul",null,[n("li",null,[T,s(" 中的 "),n("a",I,[K,t(a)]),s(" 就是用于为应用内抛出的未捕获错误指定一个全局处理函：")])]),U,n("p",null,[L,s(" 中的 "),n("a",A,[N,t(a)]),s(" 错误边界相关的 "),V,s(" 和 "),R,s(" 钩子")]),B])}const q=e(l,[["render",z],["__file","index.html.vue"]]);export{q as default};
