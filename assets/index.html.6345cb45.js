const l=JSON.parse('{"key":"v-74f28b7e","path":"/interview-questions/topic-outline/2022-js-top/","title":"2022高频前端面试题合集之JavaScript篇","lang":"zh-CN","frontmatter":{"createTime":"2022/11/08","tag":"面试题,js,面试题集合"},"excerpt":"","headers":[{"level":3,"title":"1. 根据下面 ES6 构造函数的书写方式，要求写出 ES5 的","slug":"_1-根据下面-es6-构造函数的书写方式-要求写出-es5-的","link":"#_1-根据下面-es6-构造函数的书写方式-要求写出-es5-的","children":[]},{"level":3,"title":"2. 数组去重有哪些方法？（美团 19 年）","slug":"_2-数组去重有哪些方法-美团-19-年","link":"#_2-数组去重有哪些方法-美团-19-年","children":[]},{"level":3,"title":"3. 描述下列代码的执行结果","slug":"_3-描述下列代码的执行结果","link":"#_3-描述下列代码的执行结果","children":[]},{"level":3,"title":"4. 描述下列代码的执行结果","slug":"_4-描述下列代码的执行结果","link":"#_4-描述下列代码的执行结果","children":[]},{"level":3,"title":"5. 描述下列代码的执行结果","slug":"_5-描述下列代码的执行结果","link":"#_5-描述下列代码的执行结果","children":[]},{"level":3,"title":"6. 描述下列代码的执行结果","slug":"_6-描述下列代码的执行结果","link":"#_6-描述下列代码的执行结果","children":[]},{"level":3,"title":"7. 描述下列代码的执行结果","slug":"_7-描述下列代码的执行结果","link":"#_7-描述下列代码的执行结果","children":[]},{"level":3,"title":"8. 箭头函数有哪些特点","slug":"_8-箭头函数有哪些特点","link":"#_8-箭头函数有哪些特点","children":[]},{"level":3,"title":"9. 说一说类的继承","slug":"_9-说一说类的继承","link":"#_9-说一说类的继承","children":[]},{"level":3,"title":"10. new 操作符都做了哪些事？","slug":"_10-new-操作符都做了哪些事","link":"#_10-new-操作符都做了哪些事","children":[]},{"level":3,"title":"11. call、apply、bind 的区别 ？","slug":"_11-call、apply、bind-的区别","link":"#_11-call、apply、bind-的区别","children":[]},{"level":3,"title":"12. 事件循环机制（宏任务、微任务）","slug":"_12-事件循环机制-宏任务、微任务","link":"#_12-事件循环机制-宏任务、微任务","children":[]},{"level":3,"title":"13. 你了解 node 中的事件循环机制吗？node11 版本以后有什么改变","slug":"_13-你了解-node-中的事件循环机制吗-node11-版本以后有什么改变","link":"#_13-你了解-node-中的事件循环机制吗-node11-版本以后有什么改变","children":[]},{"level":3,"title":"14. 什么是函数柯里化？","slug":"_14-什么是函数柯里化","link":"#_14-什么是函数柯里化","children":[]},{"level":3,"title":"15. promise.all 方法的使用场景？数组中必须每一项都是 promise 对象吗？不是 promise 对象会如何处理 ？","slug":"_15-promise-all-方法的使用场景-数组中必须每一项都是-promise-对象吗-不是-promise-对象会如何处理","link":"#_15-promise-all-方法的使用场景-数组中必须每一项都是-promise-对象吗-不是-promise-对象会如何处理","children":[]},{"level":3,"title":"16. this 的指向哪几种 ？","slug":"_16-this-的指向哪几种","link":"#_16-this-的指向哪几种","children":[]},{"level":3,"title":"17. JS 中继承实现的几种方式","slug":"_17-js-中继承实现的几种方式","link":"#_17-js-中继承实现的几种方式","children":[]},{"level":3,"title":"18. 什么是事件监听","slug":"_18-什么是事件监听","link":"#_18-什么是事件监听","children":[]},{"level":3,"title":"19. 什么是 js 的闭包？有什么作用？","slug":"_19-什么是-js-的闭包-有什么作用","link":"#_19-什么是-js-的闭包-有什么作用","children":[]},{"level":3,"title":"20. 事件委托以及冒泡原理","slug":"_20-事件委托以及冒泡原理","link":"#_20-事件委托以及冒泡原理","children":[]},{"level":3,"title":"21. let const var 的区别？什么是块级作用域？如何用？","slug":"_21-let-const-var-的区别-什么是块级作用域-如何用","link":"#_21-let-const-var-的区别-什么是块级作用域-如何用","children":[]},{"level":3,"title":"22. ES5 的方法实现块级作用域（立即执行函数） ES6 呢？","slug":"_22-es5-的方法实现块级作用域-立即执行函数-es6-呢","link":"#_22-es5-的方法实现块级作用域-立即执行函数-es6-呢","children":[]},{"level":3,"title":"23. ES6 箭头函数的特性","slug":"_23-es6-箭头函数的特性","link":"#_23-es6-箭头函数的特性","children":[]},{"level":3,"title":"24. 箭头函数与普通函数的区别 ？","slug":"_24-箭头函数与普通函数的区别","link":"#_24-箭头函数与普通函数的区别","children":[]},{"level":3,"title":"25. JS 的基本数据类型有哪些？基本数据类型和引用数据类型的区别","slug":"_25-js-的基本数据类型有哪些-基本数据类型和引用数据类型的区别","link":"#_25-js-的基本数据类型有哪些-基本数据类型和引用数据类型的区别","children":[]},{"level":3,"title":"26. NaN 是什么的缩写","slug":"_26-nan-是什么的缩写","link":"#_26-nan-是什么的缩写","children":[]},{"level":3,"title":"27. JS 的作用域类型","slug":"_27-js-的作用域类型","link":"#_27-js-的作用域类型","children":[]},{"level":3,"title":"28. undefined==null 返回的结果是什么？undefined 与 null 的区别在哪？","slug":"_28-undefined-null-返回的结果是什么-undefined-与-null-的区别在哪","link":"#_28-undefined-null-返回的结果是什么-undefined-与-null-的区别在哪","children":[]},{"level":3,"title":"29. 写一个函数判断变量类型","slug":"_29-写一个函数判断变量类型","link":"#_29-写一个函数判断变量类型","children":[]},{"level":3,"title":"30. js 的异步处理函数","slug":"_30-js-的异步处理函数","link":"#_30-js-的异步处理函数","children":[]},{"level":3,"title":"31. defer 与 async 的区别","slug":"_31-defer-与-async-的区别","link":"#_31-defer-与-async-的区别","children":[]},{"level":3,"title":"32. 浏览器事件循环和任务队列","slug":"_32-浏览器事件循环和任务队列","link":"#_32-浏览器事件循环和任务队列","children":[]},{"level":3,"title":"33. 原型与原型链 （美团 19年）","slug":"_33-原型与原型链-美团-19年","link":"#_33-原型与原型链-美团-19年","children":[]},{"level":3,"title":"34. 作用域与作用域链 （美团 19年）","slug":"_34-作用域与作用域链-美团-19年","link":"#_34-作用域与作用域链-美团-19年","children":[]},{"level":3,"title":"35. 闭包及应用场景以及闭包缺点 （美团 19年）","slug":"_35-闭包及应用场景以及闭包缺点-美团-19年","link":"#_35-闭包及应用场景以及闭包缺点-美团-19年","children":[]},{"level":3,"title":"36. 继承方式 （美团 19年）","slug":"_36-继承方式-美团-19年","link":"#_36-继承方式-美团-19年","children":[]},{"level":3,"title":"37. 原始值与引用值 （美团 19年）","slug":"_37-原始值与引用值-美团-19年","link":"#_37-原始值与引用值-美团-19年","children":[]},{"level":3,"title":"38. 描述下列代码的执行结果","slug":"_38-描述下列代码的执行结果","link":"#_38-描述下列代码的执行结果","children":[]},{"level":3,"title":"39. 如何判断数组或对象（美团 19年）","slug":"_39-如何判断数组或对象-美团-19年","link":"#_39-如何判断数组或对象-美团-19年","children":[]},{"level":3,"title":"40. 对象深拷贝与浅拷贝，单独问了 Object.assign（美团 19年）","slug":"_40-对象深拷贝与浅拷贝-单独问了-object-assign-美团-19年","link":"#_40-对象深拷贝与浅拷贝-单独问了-object-assign-美团-19年","children":[]},{"level":3,"title":"42. 说说 instanceof 原理，并回答下面的题目（美团 19年）","slug":"_42-说说-instanceof-原理-并回答下面的题目-美团-19年","link":"#_42-说说-instanceof-原理-并回答下面的题目-美团-19年","children":[]},{"level":3,"title":"43. 内存泄漏（美团 19 年）","slug":"_43-内存泄漏-美团-19-年","link":"#_43-内存泄漏-美团-19-年","children":[]},{"level":3,"title":"44. ES6 新增哪些东西？让你自己说（美团 19 年）","slug":"_44-es6-新增哪些东西-让你自己说-美团-19-年","link":"#_44-es6-新增哪些东西-让你自己说-美团-19-年","children":[]},{"level":3,"title":"45. weakmap、weakset（美团 19 年）","slug":"_45-weakmap、weakset-美团-19-年","link":"#_45-weakmap、weakset-美团-19-年","children":[]},{"level":3,"title":"46. 为什么 ES6 会新增 Promise（美团 19年）","slug":"_46-为什么-es6-会新增-promise-美团-19年","link":"#_46-为什么-es6-会新增-promise-美团-19年","children":[]},{"level":3,"title":"47. ES5 实现继承？（虾皮）","slug":"_47-es5-实现继承-虾皮","link":"#_47-es5-实现继承-虾皮","children":[]},{"level":3,"title":"48. 科里化？（搜狗）","slug":"_48-科里化-搜狗","link":"#_48-科里化-搜狗","children":[]},{"level":3,"title":"49. 防抖和节流？（虾皮）","slug":"_49-防抖和节流-虾皮","link":"#_49-防抖和节流-虾皮","children":[]},{"level":3,"title":"50. 闭包？（好未来---探讨了 40 分钟）","slug":"_50-闭包-好未来-探讨了-40-分钟","link":"#_50-闭包-好未来-探讨了-40-分钟","children":[]},{"level":3,"title":"51. 原型和原型链？（字节）","slug":"_51-原型和原型链-字节","link":"#_51-原型和原型链-字节","children":[]},{"level":3,"title":"52. 排序算法---（时间复杂度、空间复杂度）","slug":"_52-排序算法-时间复杂度、空间复杂度","link":"#_52-排序算法-时间复杂度、空间复杂度","children":[]},{"level":3,"title":"53. 浏览器事件循环和 node 事件循环（搜狗）","slug":"_53-浏览器事件循环和-node-事件循环-搜狗","link":"#_53-浏览器事件循环和-node-事件循环-搜狗","children":[]},{"level":3,"title":"54. 闭包的好处","slug":"_54-闭包的好处","link":"#_54-闭包的好处","children":[]},{"level":3,"title":"55. let、const、var 的区别","slug":"_55-let、const、var-的区别","link":"#_55-let、const、var-的区别","children":[]},{"level":3,"title":"56. 闭包、作用域（可以扩充到作用域链）","slug":"_56-闭包、作用域-可以扩充到作用域链","link":"#_56-闭包、作用域-可以扩充到作用域链","children":[]},{"level":3,"title":"57. Promise","slug":"_57-promise","link":"#_57-promise","children":[]},{"level":3,"title":"58. 实现一个函数,对一个url进行请求,失败就再次请求,超过最大次数就走失败回调,任何一次成功都走成功回调","slug":"_58-实现一个函数-对一个url进行请求-失败就再次请求-超过最大次数就走失败回调-任何一次成功都走成功回调","link":"#_58-实现一个函数-对一个url进行请求-失败就再次请求-超过最大次数就走失败回调-任何一次成功都走成功回调","children":[]},{"level":3,"title":"59. 冒泡排序","slug":"_59-冒泡排序","link":"#_59-冒泡排序","children":[]},{"level":3,"title":"60. 数组降维","slug":"_60-数组降维","link":"#_60-数组降维","children":[]},{"level":3,"title":"61. call apply bind","slug":"_61-call-apply-bind","link":"#_61-call-apply-bind","children":[]},{"level":3,"title":"62. promise 代码题","slug":"_62-promise-代码题","link":"#_62-promise-代码题","children":[]},{"level":3,"title":"63. proxy 是实现代理，可以改变 js 底层的实现方式, 然后说了一下和 Object.defineProperty 的区别","slug":"_63-proxy-是实现代理-可以改变-js-底层的实现方式-然后说了一下和-object-defineproperty-的区别","link":"#_63-proxy-是实现代理-可以改变-js-底层的实现方式-然后说了一下和-object-defineproperty-的区别","children":[]},{"level":3,"title":"64. 使用 ES5 与 ES6 分别实现继承","slug":"_64-使用-es5-与-es6-分别实现继承","link":"#_64-使用-es5-与-es6-分别实现继承","children":[]},{"level":3,"title":"65. 深拷贝","slug":"_65-深拷贝","link":"#_65-深拷贝","children":[]},{"level":3,"title":"66. async 与 await 的作用","slug":"_66-async-与-await-的作用","link":"#_66-async-与-await-的作用","children":[]},{"level":3,"title":"67. 数据的基础类型（原始类型）有哪些","slug":"_67-数据的基础类型-原始类型-有哪些","link":"#_67-数据的基础类型-原始类型-有哪些","children":[]},{"level":3,"title":"68. typeof null 返回结果","slug":"_68-typeof-null-返回结果","link":"#_68-typeof-null-返回结果","children":[]},{"level":3,"title":"69. 对变量进行类型判断的方式有哪些","slug":"_69-对变量进行类型判断的方式有哪些","link":"#_69-对变量进行类型判断的方式有哪些","children":[]},{"level":3,"title":"70. typeof 与 instanceof 的区别？ instanceof 是如何实现？","slug":"_70-typeof-与-instanceof-的区别-instanceof-是如何实现","link":"#_70-typeof-与-instanceof-的区别-instanceof-是如何实现","children":[]},{"level":3,"title":"71. 引用类型有哪些，有什么特点","slug":"_71-引用类型有哪些-有什么特点","link":"#_71-引用类型有哪些-有什么特点","children":[]},{"level":3,"title":"72. 如何得到一个变量的类型---指函数封装实现","slug":"_72-如何得到一个变量的类型-指函数封装实现","link":"#_72-如何得到一个变量的类型-指函数封装实现","children":[]},{"level":3,"title":"73. 什么是作用域、闭包","slug":"_73-什么是作用域、闭包","link":"#_73-什么是作用域、闭包","children":[]},{"level":3,"title":"74. 闭包的缺点是什么？闭包的应用场景有哪些？怎么销毁闭包？","slug":"_74-闭包的缺点是什么-闭包的应用场景有哪些-怎么销毁闭包","link":"#_74-闭包的缺点是什么-闭包的应用场景有哪些-怎么销毁闭包","children":[]},{"level":3,"title":"75. _JS_的垃圾回收站机制","slug":"_75-js-的垃圾回收站机制","link":"#_75-js-的垃圾回收站机制","children":[]},{"level":3,"title":"76. 什么是作用域链、原型链","slug":"_76-什么是作用域链、原型链","link":"#_76-什么是作用域链、原型链","children":[]},{"level":3,"title":"77. new 一个构造函数发生了什么","slug":"_77-new-一个构造函数发生了什么","link":"#_77-new-一个构造函数发生了什么","children":[]},{"level":3,"title":"78. 对一个构造函数实例化后. 它的原型链指向什么","slug":"_78-对一个构造函数实例化后-它的原型链指向什么","link":"#_78-对一个构造函数实例化后-它的原型链指向什么","children":[]},{"level":3,"title":"79. 什么是变量提升","slug":"_79-什么是变量提升","link":"#_79-什么是变量提升","children":[]},{"level":3,"title":"80. == 和 === 的区别是什么","slug":"_80-和-的区别是什么","link":"#_80-和-的区别是什么","children":[]},{"level":3,"title":"81. Object.is 方法比较的是什么","slug":"_81-object-is-方法比较的是什么","link":"#_81-object-is-方法比较的是什么","children":[]},{"level":3,"title":"82. 基础数据类型和引用数据类型，哪个是保存在栈内存中？哪个是在堆内存中？","slug":"_82-基础数据类型和引用数据类型-哪个是保存在栈内存中-哪个是在堆内存中","link":"#_82-基础数据类型和引用数据类型-哪个是保存在栈内存中-哪个是在堆内存中","children":[]},{"level":3,"title":"83. 箭头函数解决了什么问题？","slug":"_83-箭头函数解决了什么问题","link":"#_83-箭头函数解决了什么问题","children":[]},{"level":3,"title":"84. new 一个箭头函数后，它的 this 指向什么？","slug":"_84-new-一个箭头函数后-它的-this-指向什么","link":"#_84-new-一个箭头函数后-它的-this-指向什么","children":[]},{"level":3,"title":"85. promise 的其他方法有用过吗？如 all、race。请说下这两者的区别","slug":"_85-promise-的其他方法有用过吗-如-all、race。请说下这两者的区别","link":"#_85-promise-的其他方法有用过吗-如-all、race。请说下这两者的区别","children":[]},{"level":3,"title":"86. class 是如何实现的","slug":"_86-class-是如何实现的","link":"#_86-class-是如何实现的","children":[]},{"level":3,"title":"87. let、const、var 的区别","slug":"_87-let、const、var-的区别","link":"#_87-let、const、var-的区别","children":[]},{"level":3,"title":"88. ES6 中模块化导入和导出与 common.js 有什么区别","slug":"_88-es6-中模块化导入和导出与-common-js-有什么区别","link":"#_88-es6-中模块化导入和导出与-common-js-有什么区别","children":[]},{"level":3,"title":"89. 说一下普通函数和箭头函数的区别","slug":"_89-说一下普通函数和箭头函数的区别","link":"#_89-说一下普通函数和箭头函数的区别","children":[]},{"level":3,"title":"90. 说一下 promise 和 async 和 await 什么关系","slug":"_90-说一下-promise-和-async-和-await-什么关系","link":"#_90-说一下-promise-和-async-和-await-什么关系","children":[]},{"level":3,"title":"91. 说一下你学习过的有关 ES6 的知识点","slug":"_91-说一下你学习过的有关-es6-的知识点","link":"#_91-说一下你学习过的有关-es6-的知识点","children":[]},{"level":3,"title":"92. 了解过 js 中 arguments 吗？接收的是实参还是形参？","slug":"_92-了解过-js-中-arguments-吗-接收的是实参还是形参","link":"#_92-了解过-js-中-arguments-吗-接收的是实参还是形参","children":[]},{"level":3,"title":"93. ES6 相比于 ES5 有什么变化","slug":"_93-es6-相比于-es5-有什么变化","link":"#_93-es6-相比于-es5-有什么变化","children":[]},{"level":3,"title":"94. 强制类型转换方法有哪些？","slug":"_94-强制类型转换方法有哪些","link":"#_94-强制类型转换方法有哪些","children":[]},{"level":3,"title":"95. 纯函数","slug":"_95-纯函数","link":"#_95-纯函数","children":[]},{"level":3,"title":"96. JS 模块化","slug":"_96-js-模块化","link":"#_96-js-模块化","children":[]},{"level":3,"title":"97. 看过 jquery 源码吗？","slug":"_97-看过-jquery-源码吗","link":"#_97-看过-jquery-源码吗","children":[]},{"level":3,"title":"98. 说一下 js 中的 this","slug":"_98-说一下-js-中的-this","link":"#_98-说一下-js-中的-this","children":[]},{"level":3,"title":"99. apply call bind 区别，手写","slug":"_99-apply-call-bind-区别-手写","link":"#_99-apply-call-bind-区别-手写","children":[]},{"level":3,"title":"100. 手写 reduce flat","slug":"_100-手写-reduce-flat","link":"#_100-手写-reduce-flat","children":[]}],"git":{"updatedTime":1668147206000,"contributors":[{"name":"alan.xiao","email":"alan.xiao@d1m.cn","commits":1}]},"filePathRelative":"interview-questions/topic-outline/2022-js-top/index.md"}');export{l as data};
