const l=JSON.parse(`{"key":"v-7c9db2b2","path":"/interview-questions/topic-outline/algorithm/","title":"常见的前端算法题","lang":"zh-CN","frontmatter":{"createTime":"2022/11/01","tag":"面试题,算法题,js"},"excerpt":"","headers":[{"level":2,"title":"两数之和","slug":"两数之和","link":"#两数之和","children":[{"level":3,"title":"题目： 给定一个数组 nums 和一个目标值 target，在该数组中找出和为目标值的两个数","slug":"题目-给定一个数组-nums-和一个目标值-target-在该数组中找出和为目标值的两个数","link":"#题目-给定一个数组-nums-和一个目标值-target-在该数组中找出和为目标值的两个数","children":[]},{"level":3,"title":"输入： nums: [8, 2, 6, 5, 4, 1, 3] ； target:7","slug":"输入-nums-8-2-6-5-4-1-3-target-7","link":"#输入-nums-8-2-6-5-4-1-3-target-7","children":[]},{"level":3,"title":"输出： [2, 5]","slug":"输出-2-5","link":"#输出-2-5","children":[]}]},{"level":2,"title":"三数之和","slug":"三数之和","link":"#三数之和","children":[{"level":3,"title":"题目： 给定一个数组nums，判断 nums 中是否存在三个元素a，b，c，使得 a + b + c = target，找出所有满足条件且不重复的三元组合","slug":"题目-给定一个数组nums-判断-nums-中是否存在三个元素a-b-c-使得-a-b-c-target-找出所有满足条件且不重复的三元组合","link":"#题目-给定一个数组nums-判断-nums-中是否存在三个元素a-b-c-使得-a-b-c-target-找出所有满足条件且不重复的三元组合","children":[]},{"level":3,"title":"输入： nums: [5, 2, 1, 1, 3, 4, 6] ；target:8","slug":"输入-nums-5-2-1-1-3-4-6-target-8","link":"#输入-nums-5-2-1-1-3-4-6-target-8","children":[]},{"level":3,"title":"输出： [[1, 1, 6], [1, 2, 5], [1, 3, 4]]","slug":"输出-1-1-6-1-2-5-1-3-4","link":"#输出-1-1-6-1-2-5-1-3-4","children":[]}]},{"level":2,"title":"版本号排序","slug":"版本号排序","link":"#版本号排序","children":[{"level":3,"title":"题目： 输入一组版本号，输出从大到小的排序","slug":"题目-输入一组版本号-输出从大到小的排序","link":"#题目-输入一组版本号-输出从大到小的排序","children":[]},{"level":3,"title":"输入： ['2.1.0.1', '0.402.1', '10.2.1', '5.1.2', '1.0.4.5']","slug":"输入-2-1-0-1-0-402-1-10-2-1-5-1-2-1-0-4-5","link":"#输入-2-1-0-1-0-402-1-10-2-1-5-1-2-1-0-4-5","children":[]},{"level":3,"title":"输出： ['10.2.1', '5.1.2', '2.1.0.1', '1.0.4.5', '0.402.1']","slug":"输出-10-2-1-5-1-2-2-1-0-1-1-0-4-5-0-402-1","link":"#输出-10-2-1-5-1-2-2-1-0-1-1-0-4-5-0-402-1","children":[]}]},{"level":2,"title":"第一个不重复的字符","slug":"第一个不重复的字符","link":"#第一个不重复的字符","children":[{"level":3,"title":"题目： 输入一个字符串，找到第一个不重复字符的下标","slug":"题目-输入一个字符串-找到第一个不重复字符的下标","link":"#题目-输入一个字符串-找到第一个不重复字符的下标","children":[]},{"level":3,"title":"输入： 'abcabcde'","slug":"输入-abcabcde","link":"#输入-abcabcde","children":[]},{"level":3,"title":"输出： 6","slug":"输出-6","link":"#输出-6","children":[]}]},{"level":2,"title":"字符串所有排列组合","slug":"字符串所有排列组合","link":"#字符串所有排列组合","children":[{"level":3,"title":"题目： 输入一个字符串，打印出该字符串中，所有字符的排列组合","slug":"题目-输入一个字符串-打印出该字符串中-所有字符的排列组合","link":"#题目-输入一个字符串-打印出该字符串中-所有字符的排列组合","children":[]},{"level":3,"title":"输入： 'abc'","slug":"输入-abc","link":"#输入-abc","children":[]},{"level":3,"title":"输出： ['abc', 'acb', 'bca', 'bac', 'cab', 'cba']","slug":"输出-abc-acb-bca-bac-cab-cba","link":"#输出-abc-acb-bca-bac-cab-cba","children":[]}]},{"level":2,"title":"冒泡排序","slug":"冒泡排序","link":"#冒泡排序","children":[]},{"level":2,"title":"选择排序","slug":"选择排序","link":"#选择排序","children":[]},{"level":2,"title":"插入排序","slug":"插入排序","link":"#插入排序","children":[]},{"level":2,"title":"快速排序","slug":"快速排序","link":"#快速排序","children":[]},{"level":2,"title":"归并排序","slug":"归并排序","link":"#归并排序","children":[]},{"level":2,"title":"列表转成树","slug":"列表转成树","link":"#列表转成树","children":[{"level":3,"title":"题目： 输入一组列表如下，转化成树形结构","slug":"题目-输入一组列表如下-转化成树形结构","link":"#题目-输入一组列表如下-转化成树形结构","children":[]},{"level":3,"title":"输入","slug":"输入","link":"#输入","children":[]},{"level":3,"title":"输出","slug":"输出","link":"#输出","children":[]}]},{"level":2,"title":"深度优先遍历","slug":"深度优先遍历","link":"#深度优先遍历","children":[{"level":3,"title":"题目： 对树进行遍历，从第一个节点开始，遍历其子节点，直到它的所有子节点都被遍历完毕，然后再遍历它的兄弟节点","slug":"题目-对树进行遍历-从第一个节点开始-遍历其子节点-直到它的所有子节点都被遍历完毕-然后再遍历它的兄弟节点","link":"#题目-对树进行遍历-从第一个节点开始-遍历其子节点-直到它的所有子节点都被遍历完毕-然后再遍历它的兄弟节点","children":[]},{"level":3,"title":"输入： tree","slug":"输入-tree","link":"#输入-tree","children":[]},{"level":3,"title":"输出： [1, 3, 4, 2, 5]","slug":"输出-1-3-4-2-5","link":"#输出-1-3-4-2-5","children":[]}]},{"level":2,"title":"广度优先遍历","slug":"广度优先遍历","link":"#广度优先遍历","children":[{"level":3,"title":"题目： 以横向的维度对树进行遍历，从第一个节点开始，依次遍历其所有的兄弟节点，再遍历第一个节点的子节点，一层层向下遍历","slug":"题目-以横向的维度对树进行遍历-从第一个节点开始-依次遍历其所有的兄弟节点-再遍历第一个节点的子节点-一层层向下遍历","link":"#题目-以横向的维度对树进行遍历-从第一个节点开始-依次遍历其所有的兄弟节点-再遍历第一个节点的子节点-一层层向下遍历","children":[]},{"level":3,"title":"输入： tree结构","slug":"输入-tree结构","link":"#输入-tree结构","children":[]},{"level":3,"title":"输出： [1, 2, 3, 4, 5]","slug":"输出-1-2-3-4-5","link":"#输出-1-2-3-4-5","children":[]}]},{"level":2,"title":"树形结构查找节点","slug":"树形结构查找节点","link":"#树形结构查找节点","children":[{"level":3,"title":"题目： 查找树形结构中符合要求的节点","slug":"题目-查找树形结构中符合要求的节点","link":"#题目-查找树形结构中符合要求的节点","children":[]},{"level":3,"title":"输入 结果","slug":"输入-结果","link":"#输入-结果","children":[]}]},{"level":2,"title":"二叉查找树","slug":"二叉查找树","link":"#二叉查找树","children":[{"level":3,"title":"题目： 判断一个数组，是否为某二叉查找树的前序遍历结果，二叉查找树特点是所有的左节点比父节点的值小，所有的右节点比父节点的值大","slug":"题目-判断一个数组-是否为某二叉查找树的前序遍历结果-二叉查找树特点是所有的左节点比父节点的值小-所有的右节点比父节点的值大","link":"#题目-判断一个数组-是否为某二叉查找树的前序遍历结果-二叉查找树特点是所有的左节点比父节点的值小-所有的右节点比父节点的值大","children":[]},{"level":3,"title":"输入： [5, 3, 2, 1, 4, 6, 7, 8, 9]","slug":"输入-5-3-2-1-4-6-7-8-9","link":"#输入-5-3-2-1-4-6-7-8-9","children":[]},{"level":3,"title":"输出： true","slug":"输出-true","link":"#输出-true","children":[]}]},{"level":2,"title":"查找二叉树的路径","slug":"查找二叉树的路径","link":"#查找二叉树的路径","children":[{"level":3,"title":"题目： 查找二叉树和为某一值的路径","slug":"题目-查找二叉树和为某一值的路径","link":"#题目-查找二叉树和为某一值的路径","children":[]},{"level":3,"title":"输入： 二叉树结构如下，找到和为 11 的所有路径","slug":"输入-二叉树结构如下-找到和为-11-的所有路径","link":"#输入-二叉树结构如下-找到和为-11-的所有路径","children":[]},{"level":3,"title":"输出： [[5, 3, 2, 1], [5, 6]]","slug":"输出-5-3-2-1-5-6","link":"#输出-5-3-2-1-5-6","children":[]}]},{"level":2,"title":"买卖股票问题","slug":"买卖股票问题","link":"#买卖股票问题","children":[{"level":3,"title":"题目： 给定一个整数数组，其中第 i 个元素代表了第 i天的股票价格 非负整数 fee 代表了交易股票的手续费用，求返回获得利润的最大值","slug":"题目-给定一个整数数组-其中第-i-个元素代表了第-i天的股票价格-非负整数-fee-代表了交易股票的手续费用-求返回获得利润的最大值","link":"#题目-给定一个整数数组-其中第-i-个元素代表了第-i天的股票价格-非负整数-fee-代表了交易股票的手续费用-求返回获得利润的最大值","children":[]},{"level":3,"title":"输入： arr: [1, 12, 13, 9, 15, 8, 6, 16]； fee: 2","slug":"输入-arr-1-12-13-9-15-8-6-16-fee-2","link":"#输入-arr-1-12-13-9-15-8-6-16-fee-2","children":[]},{"level":3,"title":"输出： 22","slug":"输出-22","link":"#输出-22","children":[]}]},{"level":2,"title":"斐波那契数列","slug":"斐波那契数列","link":"#斐波那契数列","children":[{"level":3,"title":"题目： 从第3项开始，当前项等于前两项之和： 1 1 2 3 5 8 13 21 ……，计算第n项的值","slug":"题目-从第3项开始-当前项等于前两项之和-1-1-2-3-5-8-13-21-计算第n项的值","link":"#题目-从第3项开始-当前项等于前两项之和-1-1-2-3-5-8-13-21-计算第n项的值","children":[]},{"level":3,"title":"输入： 10","slug":"输入-10","link":"#输入-10","children":[]},{"level":3,"title":"输出： 89","slug":"输出-89","link":"#输出-89","children":[]}]},{"level":2,"title":"滑动窗口最大值","slug":"滑动窗口最大值","link":"#滑动窗口最大值","children":[{"level":3,"title":"题目： 给定一个数组 nums，有一个大小为 k 的滑动窗口，从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口中的k个数字。滑动窗口每次只向右移动一位，求返回滑动窗口最大值","slug":"题目-给定一个数组-nums-有一个大小为-k-的滑动窗口-从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口中的k个数字。滑动窗口每次只向右移动一位-求返回滑动窗口最大值","link":"#题目-给定一个数组-nums-有一个大小为-k-的滑动窗口-从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口中的k个数字。滑动窗口每次只向右移动一位-求返回滑动窗口最大值","children":[]},{"level":3,"title":"输入： nums: [1,3,-1,-3,5,3,6,7]； k: 3","slug":"输入-nums-1-3-1-3-5-3-6-7-k-3","link":"#输入-nums-1-3-1-3-5-3-6-7-k-3","children":[]},{"level":3,"title":"输出： [3, 3, 5, 5, 6, 7]","slug":"输出-3-3-5-5-6-7","link":"#输出-3-3-5-5-6-7","children":[]}]},{"level":2,"title":"最长递增子序列","slug":"最长递增子序列","link":"#最长递增子序列","children":[{"level":3,"title":"题目： 一个整数数组 nums，找到其中一组最长递增子序列的值","slug":"题目-一个整数数组-nums-找到其中一组最长递增子序列的值","link":"#题目-一个整数数组-nums-找到其中一组最长递增子序列的值","children":[]},{"level":3,"title":"输入： [3,5,7,1,2,8]","slug":"输入-3-5-7-1-2-8","link":"#输入-3-5-7-1-2-8","children":[]},{"level":3,"title":"输出： [3,5,7,8]","slug":"输出-3-5-7-8","link":"#输出-3-5-7-8","children":[]}]}],"git":{"updatedTime":1668147206000,"contributors":[{"name":"alan.xiao","email":"alan.xiao@d1m.cn","commits":1}]},"filePathRelative":"interview-questions/topic-outline/algorithm/index.md"}`);export{l as data};
