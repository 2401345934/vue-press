import{_ as n,z as e,A as a,a6 as s}from"./framework.fef63301.js";const i={},t=s(`<h1 id="git-本地仓库上的操作-gitignore" tabindex="-1"><a class="header-anchor" href="#git-本地仓库上的操作-gitignore" aria-hidden="true">#</a> git 本地仓库上的操作&amp;gitignore</h1><h2 id="git-本地仓库上的操作" tabindex="-1"><a class="header-anchor" href="#git-本地仓库上的操作" aria-hidden="true">#</a> git 本地仓库上的操作</h2><ol><li>查看本地仓库关联的远程仓库：git remote；在克隆完每个远程仓库后，远程仓库默认为origin;加上-v的参数后，会显示远程仓库的url地址；</li><li>添加远程仓库，一般会取一个简短的别名：git remote add [remote-name] [url]，比如：git remote add example git://github.com/example/example.git;</li><li>从远程仓库中抓取本地仓库中没有的更新：git fetch [remote-name]，如git fetch origin;使用fetch只是将远端数据拉到本地仓库，并不自动合并到当前工作分支，只能人工合并。如果设置了某个分支关联到远程仓库的某个分支的话，可以使用git pull来拉去远程分支的数据，然后将远端分支自动合并到本地仓库中的当前分支；</li><li>将本地仓库某分支推送到远程仓库上：git push [remote-name] [branch-name]，如git push origin master；如果想将本地分支推送到远程仓库的不同名分支：git push remote-name local-branch:remote-branch，如git push origin serverfix:awesomebranch;如果想删除远程分支：git push [romote-name] :remote-branch，如git push origin :serverfix。这里省略了本地分支，也就相当于将空白内容推送给远程分支，就等于删掉了远程分支。</li><li>查看远程仓库的详细信息：git remote show origin；</li><li>修改某个远程仓库在本地的简称：git remote rename [old-name] [new-name]，如 git remote rename origin org；</li><li>移除远程仓库：git remote rm [remote-name]；</li></ol><h2 id="gitignore" tabindex="-1"><a class="header-anchor" href="#gitignore" aria-hidden="true">#</a> gitignore</h2><p>一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。我们可以创建一个名为 .gitignore 的文件，列出要忽略的文件模式。如下例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code># 此为注释 – 将被 Git 忽略
# 忽略所有 <span class="token punctuation">.</span>a 结尾的文件
<span class="token operator">*</span><span class="token punctuation">.</span>a
# 但 lib<span class="token punctuation">.</span>a 除外
<span class="token operator">!</span>lib<span class="token punctuation">.</span>a
# 仅仅忽略项目根目录下的 <span class="token constant">TODO</span> 文件，不包括 subdir<span class="token operator">/</span><span class="token constant">TODO</span>
<span class="token operator">/</span><span class="token constant">TODO</span>
# 忽略 build<span class="token operator">/</span> 目录下的所有文件
build<span class="token operator">/</span>
# 会忽略 doc<span class="token operator">/</span>notes<span class="token punctuation">.</span>txt 但不包括 doc<span class="token operator">/</span>server<span class="token operator">/</span>arch<span class="token punctuation">.</span>txt
doc<span class="token comment">/*.txt
# 忽略 doc/ 目录下所有扩展名为 txt 的文件
doc/**/</span><span class="token operator">*</span><span class="token punctuation">.</span>txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[t];function r(l,c){return e(),a("div",null,o)}const d=n(i,[["render",r],["__file","index.html.vue"]]);export{d as default};
