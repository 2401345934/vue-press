import{_ as n,z as s,A as a,a6 as t}from"./framework.fef63301.js";const e={},p=t(`<h1 id="创建-ast-根节点" tabindex="-1"><a class="header-anchor" href="#创建-ast-根节点" aria-hidden="true">#</a> 创建 AST 根节点</h1><ul><li>子节点解析完毕 baseParse 过程就剩最后一步创建 AST 根节点</li></ul><h2 id="createroot" tabindex="-1"><a class="header-anchor" href="#createroot" aria-hidden="true">#</a> createRoot</h2><ul><li>createRoot 会返回一个 js 对象作为 AST 的根节点 <ul><li>type ： 0 表示是一个根节点类型</li><li>children： 就是前面解析的 子节点 nodes 数组</li></ul></li><li>根节点还添加了其他的属性</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">createRoot</span><span class="token punctuation">(</span>options<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>RootNode<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> RootNode <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> NodeTypes<span class="token punctuation">.</span><span class="token constant">ROOT</span><span class="token punctuation">,</span>
    children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    helpers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    components<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    directives<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    imports<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    hoists<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    cached<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    temps<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    codegenNode<span class="token operator">:</span> <span class="token function">createSimpleExpression</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">null</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    loc<span class="token operator">:</span> locStub<span class="token punctuation">,</span>
    <span class="token operator">...</span>options
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","index.html.vue"]]);export{r as default};
