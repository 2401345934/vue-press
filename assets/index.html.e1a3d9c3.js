import{_ as a,z as n,A as e,a6 as s}from"./framework.fef63301.js";const o={},t=s(`<h1 id="url-转码-和解码" tabindex="-1"><a class="header-anchor" href="#url-转码-和解码" aria-hidden="true">#</a> URL 转码 和解码</h1><h2 id="_1-escape-和-unescape" tabindex="-1"><a class="header-anchor" href="#_1-escape-和-unescape" aria-hidden="true">#</a> 1. escape 和 unescape</h2><ul><li>escape()不能直接用于URL编码，它的真正作用是返回一个字符的Unicode编码值。</li><li>采用unicode字符集对指定的字符串除0-255以外进行编码。所有的空格符、标点符号、特殊字符以及更多有联系非ASCII字符都将被转化成%xx格式的字符编码（xx等于该字符在字符集表里面的编码的16进制数字）。比如，空格符对应的编码是%20。</li></ul><h3 id="escape不编码字符有69个-0-9-a-z-a-z" tabindex="-1"><a class="header-anchor" href="#escape不编码字符有69个-0-9-a-z-a-z" aria-hidden="true">#</a> escape不编码字符有69个：*，+，-，.，/，@，_，0-9，a-z，A-Z</h3><ul><li>escape()函数用于js对字符串进行编码，不常用。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>　<span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&quot;http://localhost:8080/pro?a=1&amp;b=张三&amp;c=aaa&quot;</span><span class="token punctuation">;</span>
　　<span class="token function">escape</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>  <span class="token operator">--</span><span class="token operator">&gt;</span>  <span class="token comment">///   http%3A//localhost%3A8080/pro%3Fa%3D1%26b%3D%u5F20%u4E09%26c%3Daaa  </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-encodeuri-和-decodeuri" tabindex="-1"><a class="header-anchor" href="#_2-encodeuri-和-decodeuri" aria-hidden="true">#</a> 2. encodeURI 和 decodeURI</h2><ul><li>把URI字符串采用UTF-8编码格式转化成escape各式的字符串。</li></ul><h3 id="encodeuri不编码字符有82个-0-9-a-z-a-z" tabindex="-1"><a class="header-anchor" href="#encodeuri不编码字符有82个-0-9-a-z-a-z" aria-hidden="true">#</a> encodeURI不编码字符有82个：!，#，$，&amp;，&#39;，(，)，*，+，,，-，.，/，:，;，=，?，@，_，~，0-9，a-z，A-Z</h3><ul><li>encodeURI()用于整个url编码</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>　　<span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&quot;http://localhost:8080/pro?a=1&amp;b=张三&amp;c=aaa&quot;</span><span class="token punctuation">;</span>
　　<span class="token function">encodeURI</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>  <span class="token operator">--</span><span class="token operator">&gt;</span>   <span class="token comment">// &lt;http://localhost:8080/pro?a=1&amp;b=%E5%BC%A0%E4%B8%89&amp;c=aaa&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-encodeuricomponent-和-decodeuricomponent" tabindex="-1"><a class="header-anchor" href="#_3-encodeuricomponent-和-decodeuricomponent" aria-hidden="true">#</a> 3. encodeURIComponent 和 decodeURIComponent</h2><h3 id="与encodeuri-的区别是-它用于对url的组成部分进行个别编码-而不用于对整个url进行编码" tabindex="-1"><a class="header-anchor" href="#与encodeuri-的区别是-它用于对url的组成部分进行个别编码-而不用于对整个url进行编码" aria-hidden="true">#</a> 与encodeURI()的区别是，它用于对URL的组成部分进行个别编码，而不用于对整个URL进行编码</h3><p>因此，&quot;; / ? : @ &amp; = + $ , #&quot;，这些在encodeURI()中不被编码的符号，在encodeURIComponent()中统统会被编码。至于具体的编码方法，两者是一样。把URI字符串采用UTF-8编码格式转化成escape格式的字符串。 encodeURIComponent() 用于参数的传递，参数包含特殊字符可能会造成间断。</p><h3 id="例1" tabindex="-1"><a class="header-anchor" href="#例1" aria-hidden="true">#</a> 例1</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>　　<span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&quot;http://localhost:8080/pro?a=1&amp;b=张三&amp;c=aaa&quot;</span><span class="token punctuation">;</span>
　　<span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token operator">--</span><span class="token operator">&gt;</span> <span class="token comment">/// http%3A%2F%2Flocalhost%3A8080%2Fpro%3Fa%3D1%26b%3D%E5%BC%A0%E4%B8%89%26c%3Daaa</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="例2" tabindex="-1"><a class="header-anchor" href="#例2" aria-hidden="true">#</a> 例2</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
　<span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&quot;&lt;http://localhost:8080/pp?a=1&amp;b&gt;=&quot;</span><span class="token operator">+</span> paramUrl<span class="token punctuation">,</span>
　　<span class="token keyword">var</span> paramUrl <span class="token operator">=</span> <span class="token string">&quot;http://localhost:8080/aa?a=1&amp;b=2&amp;c=3&quot;</span><span class="token punctuation">;</span>
　　<span class="token comment">// 应该使用encodeURIComponent()进行转码　　</span>
　　<span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>paramUrl<span class="token punctuation">)</span> <span class="token operator">--</span><span class="token operator">&gt;</span> <span class="token comment">/// &lt;http://localhost:8080/pp?a=1&amp;b=http%3A%2F%2Flocalhost%3A8080%2Faa%3Fa%3D1%26b%3D2%23%26c%3D3&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),c=[t];function p(r,l){return n(),e("div",null,c)}const d=a(o,[["render",p],["__file","index.html.vue"]]);export{d as default};
