const e=JSON.parse('{"key":"v-36d51d78","path":"/interview-questions/design-patterns/decorator/","title":"代理模式","lang":"zh-CN","frontmatter":{"createTime":"2022/11/06","tag":"js,面试题,设计模式"},"excerpt":"","headers":[{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":2,"title":"代理模式","slug":"代理模式-1","link":"#代理模式-1","children":[{"level":3,"title":"What problems can the Proxy design pattern solve?","slug":"what-problems-can-the-proxy-design-pattern-solve","link":"#what-problems-can-the-proxy-design-pattern-solve","children":[]},{"level":3,"title":"What solution does the Proxy design pattern describe?","slug":"what-solution-does-the-proxy-design-pattern-describe","link":"#what-solution-does-the-proxy-design-pattern-describe","children":[]}]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]}],"git":{"updatedTime":1668147206000,"contributors":[{"name":"alan.xiao","email":"alan.xiao@d1m.cn","commits":1}]},"filePathRelative":"interview-questions/design-patterns/decorator/index.md"}');export{e as data};
