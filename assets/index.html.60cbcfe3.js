import{_ as a,z as e,A as i,a6 as r}from"./framework.fef63301.js";const t="/vue-press/assets/navigateTo.ef6b3c6c.webp",h="/vue-press/assets/navigateTo2.9313f831.webp",c="/vue-press/assets/redirectTo.c90c3013.webp",s="/vue-press/assets/redirectTo2.27a1548f.webp",d="/vue-press/assets/switchTab.0ec86212.webp",n="/vue-press/assets/navigateBack.6ea783e1.webp",o="/vue-press/assets/reLaunch.80219266.webp",l="/vue-press/assets/reLaunch2.bec3bce4.webp",b={},p=r('<h1 id="微信小程序中路由跳转的方式有哪些-区别" tabindex="-1"><a class="header-anchor" href="#微信小程序中路由跳转的方式有哪些-区别" aria-hidden="true">#</a> 微信小程序中路由跳转的方式有哪些？区别？</h1><h2 id="一、是什么" tabindex="-1"><a class="header-anchor" href="#一、是什么" aria-hidden="true">#</a> 一、是什么</h2><p>微信小程序拥有web网页和Application共同的特征，我们的页面都不是孤立存在的，而是通过和其他页面进行交互，来共同完成系统的功能 在微信小程序中，每个页面可以看成是一个 pageModel，pageModel 全部以栈的形式进行管理</p><h2 id="二、有哪些" tabindex="-1"><a class="header-anchor" href="#二、有哪些" aria-hidden="true">#</a> 二、有哪些</h2><h3 id="常见的微信小程序页面跳转方式有如下" tabindex="-1"><a class="header-anchor" href="#常见的微信小程序页面跳转方式有如下" aria-hidden="true">#</a> 常见的微信小程序页面跳转方式有如下</h3><ul><li>wx.navigateTo(Object)</li><li>wx.redirectTo(Object)</li><li>wx.switchTab(Object)</li><li>wx.navigateBack(Object)</li><li>wx.reLaunch(Object)</li></ul><h3 id="wx-navigateto-object" tabindex="-1"><a class="header-anchor" href="#wx-navigateto-object" aria-hidden="true">#</a> wx.navigateTo(Object)</h3><p>wx.navigateTo()用于保留当前页面、跳转到应用内的某个页面，使用 wx.navigateBack可以返回到原页面 对于页面不是特别多的小程序，通常推荐使用 wx.navigateTo进行跳转， 以便返回原页面，以提高加载速度。当页面特别多时，则不推荐使用</p><h4 id="参数表如下所示" tabindex="-1"><a class="header-anchor" href="#参数表如下所示" aria-hidden="true">#</a> 参数表如下所示</h4><p><img src="'+t+'" alt="图片"></p><h4 id="流程图如下" tabindex="-1"><a class="header-anchor" href="#流程图如下" aria-hidden="true">#</a> 流程图如下</h4><p><img src="'+h+'" alt="图片"></p><h3 id="wx-redirectto-object" tabindex="-1"><a class="header-anchor" href="#wx-redirectto-object" aria-hidden="true">#</a> wx.redirectTo(Object)</h3><p>重定向，当页面过多时，被保留页面会挤占微信分配给小程序的内存，或是达到微信所限制的 10 层页面栈的情况下，我们应该考虑选择 wx.redirectTo wx.redirectTo()用于关闭当前页面，跳转到应用内的某个页面 这样的跳转，可以避免跳转前页面占据运行内存，但返回时页面需要重新加载，增加了返回页面的显示时间</p><h4 id="参数表如下所示-1" tabindex="-1"><a class="header-anchor" href="#参数表如下所示-1" aria-hidden="true">#</a> 参数表如下所示</h4><p><img src="'+c+'" alt="图片"></p><h4 id="流程图如下所示" tabindex="-1"><a class="header-anchor" href="#流程图如下所示" aria-hidden="true">#</a> 流程图如下所示</h4><p><img src="'+s+'" alt="图片"></p><h3 id="wx-switchtab-object" tabindex="-1"><a class="header-anchor" href="#wx-switchtab-object" aria-hidden="true">#</a> wx.switchTab(Object)</h3><p>跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面</p><h4 id="参数表如下所示-2" tabindex="-1"><a class="header-anchor" href="#参数表如下所示-2" aria-hidden="true">#</a> 参数表如下所示</h4><p><img src="'+d+'" alt="图片"></p><h3 id="wx-navigateback-object" tabindex="-1"><a class="header-anchor" href="#wx-navigateback-object" aria-hidden="true">#</a> wx.navigateBack(Object)</h3><p>wx.navigateBack() 用于关闭当前页面，并返回上一页面或多级页面，开发者可通过 getCurrentPages() 获取当前的页面栈，决定需要返回几层则设置对象的delta属性即可</p><h4 id="参数表如下" tabindex="-1"><a class="header-anchor" href="#参数表如下" aria-hidden="true">#</a> 参数表如下</h4><p><img src="'+n+'" alt="图片"></p><h3 id="wx-relaunch-object" tabindex="-1"><a class="header-anchor" href="#wx-relaunch-object" aria-hidden="true">#</a> wx.reLaunch(Object)</h3><p>关闭所有页面，打开到应用内的某个页面，返回的时候跳到首页</p><h4 id="参数表如下所示-3" tabindex="-1"><a class="header-anchor" href="#参数表如下所示-3" aria-hidden="true">#</a> 参数表如下所示</h4><p><img src="'+o+'" alt="图片"></p><h4 id="流程图如下所示-1" tabindex="-1"><a class="header-anchor" href="#流程图如下所示-1" aria-hidden="true">#</a> 流程图如下所示</h4><p><img src="'+l+'" alt="图片"></p><h2 id="三、总结" tabindex="-1"><a class="header-anchor" href="#三、总结" aria-hidden="true">#</a> 三、总结</h2><h3 id="关于上述五种跳转方式-做下总结" tabindex="-1"><a class="header-anchor" href="#关于上述五种跳转方式-做下总结" aria-hidden="true">#</a> 关于上述五种跳转方式，做下总结</h3><ul><li>navigateTo 保留当前页面，跳转到应用内的某个页面，使用 wx.navigateBack 可以返回到原页</li><li>redirectTo 关闭当前页面，跳转到应用内的某个页面</li><li>switchTab 跳转到 tabBar 页面，同时关闭其他非 tabBar 页面</li><li>navigateBack 返回上一页面</li><li>reLanch 关闭所有页面，打开到应用内的某个页面</li></ul><h3 id="其中关于它们的页面栈的关系如下" tabindex="-1"><a class="header-anchor" href="#其中关于它们的页面栈的关系如下" aria-hidden="true">#</a> 其中关于它们的页面栈的关系如下</h3><ul><li>avigateTo 新页面入栈</li><li>redirectTo 当前页面出栈，新页面入栈</li><li>navigateBack 页面不断出栈，直到目标返回页，新页面入栈</li><li>switchTab 页面全部出栈，只留下新的 Tab 页面</li><li>reLanch 页面全部出栈，只留下新的页面</li></ul>',37),x=[p];function u(w,g){return e(),i("div",null,x)}const f=a(b,[["render",u],["__file","index.html.vue"]]);export{f as default};
