import{_ as s,z as n,A as a,a6 as e}from"./framework.fef63301.js";const t={},p=e(`<h1 id="eslint-prettier-husky-commitlint-lint-staged-规范前端工程代码规范" tabindex="-1"><a class="header-anchor" href="#eslint-prettier-husky-commitlint-lint-staged-规范前端工程代码规范" aria-hidden="true">#</a> Eslint + Prettier + Husky + Commitlint+ Lint-staged 规范前端工程代码规范</h1><h2 id="_1-代码规范" tabindex="-1"><a class="header-anchor" href="#_1-代码规范" aria-hidden="true">#</a> 1.代码规范</h2><h3 id="代码检查工具" tabindex="-1"><a class="header-anchor" href="#代码检查工具" aria-hidden="true">#</a> 代码检查工具</h3><ul><li><p>Eslint</p></li><li><p>项目集成</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm i eslint <span class="token operator">-</span><span class="token constant">D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npx eslint <span class="token operator">--</span>init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>init 命令会自动生成 .eslintrc.js</li></ul></li></ul><h3 id="代码风格工具" tabindex="-1"><a class="header-anchor" href="#代码风格工具" aria-hidden="true">#</a> 代码风格工具</h3><ul><li>prettier</li><li>项目集成</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm i prettier eslint<span class="token operator">-</span>config<span class="token operator">-</span>prettier eslint<span class="token operator">-</span>plugin<span class="token operator">-</span>prettier <span class="token operator">-</span><span class="token constant">D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>在.eslintrc 中,extend中添加 &quot;prettier&quot; 解决 eslint 和 prettier 的冲突 <ul><li>因为eslint-config-prettier新版本更新之后,只需要写一个 &quot;prettierr&quot; 即可,无需多言指令</li></ul></li><li>创建 .prettierrc</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 自己配置</span>
<span class="token punctuation">{</span>
  <span class="token string-property property">&quot;semi&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;tabWidth&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;trailingComma&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;singleQuote&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;arrowParens&quot;</span><span class="token operator">:</span> <span class="token string">&quot;avoid&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-git规范" tabindex="-1"><a class="header-anchor" href="#_2-git规范" aria-hidden="true">#</a> 2.git规范</h2><p>Git 有很多的 hooks, 让我们在不同的阶段,对代码进行不同的操作,控制提交到仓库的代码的规范性,和准确性, 以下只是几个常用的钩子</p><h3 id="_2-1-提交的代码规范" tabindex="-1"><a class="header-anchor" href="#_2-1-提交的代码规范" aria-hidden="true">#</a> 2.1 提交的代码规范</h3><ul><li>pre-commit</li><li>描述: 通过钩子函数,判断提交的代码是否符合规范</li></ul><h3 id="_2-2-提交的信息规范" tabindex="-1"><a class="header-anchor" href="#_2-2-提交的信息规范" aria-hidden="true">#</a> 2.2 提交的信息规范</h3><ul><li>commit-msg</li><li>描述: 通过钩子函数,判断 commit 信息是否符合规范</li></ul><h3 id="_2-3-提交的代码影响" tabindex="-1"><a class="header-anchor" href="#_2-3-提交的代码影响" aria-hidden="true">#</a> 2.3 提交的代码影响</h3><ul><li>pre-push</li><li>描述: 通过钩子,执行测试,避免对以前的内容造成影响</li></ul><h3 id="工具" tabindex="-1"><a class="header-anchor" href="#工具" aria-hidden="true">#</a> 工具</h3><ul><li>husky <ul><li>操作 git 钩子的工具</li></ul></li><li>lint-staged <ul><li>本地暂存代码检查工具</li></ul></li><li>commitlint <ul><li>commit 信息校验工具</li></ul></li><li>commitizen</li><li>辅助 commit 信息 ,就像这样,通过选择输入,规范提交信息</li></ul><h3 id="安装流程" tabindex="-1"><a class="header-anchor" href="#安装流程" aria-hidden="true">#</a> 安装流程</h3><ul><li>1.安装代码校验依赖</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm i lint<span class="token operator">-</span>staged husky <span class="token operator">-</span><span class="token constant">D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在package.json中添加脚本</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm set<span class="token operator">-</span>script prepare <span class="token string">&quot;husky install&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>初始化husky,将 git hooks 钩子交由,husky执行</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm run prepare 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>初始化 husky, 会在根目录创建 .husky 文件夹</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> npx husky add <span class="token punctuation">.</span>husky<span class="token operator">/</span>pre<span class="token operator">-</span>commit <span class="token string">&quot;npx lint-staged&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>pre-commit 执行 npx lint-staged 指令</li><li>根目录创建 .lintstagedrc.json 文件控制检查和操作方式</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token string-property property">&quot;*.{js,jsx,ts,tsx}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;prettier --write .&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;eslint  --fix&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;*.md&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;prettier --write&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>2.安装提交信息依赖</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm i commitlint @commitlint<span class="token operator">/</span>config<span class="token operator">-</span>conventional <span class="token operator">-</span><span class="token constant">D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npx husky add <span class="token punctuation">.</span>husky<span class="token operator">/</span>commit<span class="token operator">-</span>msg <span class="token string">&#39;npx --no-install commitlint --edit &quot;$1&quot;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>@commitlint/config-conventional 这是一个规范配置,标识采用什么规范来执行消息校验, 这个默认是Angular的提交规范</p><h3 id="类型-描述" tabindex="-1"><a class="header-anchor" href="#类型-描述" aria-hidden="true">#</a> 类型 描述</h3><ul><li>build 编译相关的修改，例如发布版本、对项目构建或者依赖的改动</li><li>chore 其他修改, 比如改变构建流程、或者增加依赖库、工具等</li><li>ci 持续集成修改</li><li>docs 文档修改</li><li>feat 新特性、新功能</li><li>fix 修改bug</li><li>perf 优化相关，比如提升性能、体验</li><li>refactor 代码重构</li><li>revert 回滚到上一个版本</li><li>style 代码格式修改, 注意不是 css 修改</li><li>test 测试用例修改 ■ commit-msg 钩子执行 消息校验 ■ 我们也可以使用自己写的方法,设置的话使用一下指令</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npx husky add <span class="token punctuation">.</span>husky<span class="token operator">/</span>commit<span class="token operator">-</span>msg <span class="token string">&#39;node [dir]/filename.js&#39;</span> # 指定目录文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>3.安装辅助提交依赖</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm i commitizen cz<span class="token operator">-</span>conventional<span class="token operator">-</span>changelog <span class="token operator">-</span><span class="token constant">D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装指令和命令行的展示信息</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm set<span class="token operator">-</span>script commit <span class="token string">&quot;git-cz&quot;</span> # <span class="token keyword">package</span><span class="token punctuation">.</span>json 中添加 commit 指令<span class="token punctuation">,</span> 执行 <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">git-cz</span><span class="token template-punctuation string">\`</span></span> 指令
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编写commit指令</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npx commitizen init cz<span class="token operator">-</span>conventional<span class="token operator">-</span>changelog <span class="token operator">--</span>save<span class="token operator">-</span>dev <span class="token operator">--</span>save<span class="token operator">-</span>exact
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>初始化命令行的选项信息,不然没有选项</p><ul><li>4.自定义提交规范</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm i <span class="token operator">-</span><span class="token constant">D</span> commitlint<span class="token operator">-</span>config<span class="token operator">-</span>cz  cz<span class="token operator">-</span>customizable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>变更 commitlint.config.js 这里采用自己定义的规范,将会覆盖上面那个,所以上面那个可以不用安装</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;cz&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>增加 .cz-config.js</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token string">&#39;use strict&#39;</span>
 module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
   <span class="token literal-property property">types</span><span class="token operator">:</span> <span class="token punctuation">[</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;✨新增&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;新增:    新的内容&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;🐛修复&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;修复:    修复一个Bug&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;📝文档&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;文档:    变更的只有文档&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;💄格式&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;格式:    空格, 分号等格式修复&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;♻️重构&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;重构:    代码重构，注意和特性、修复区分开&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;⚡️性能&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;性能:    提升性能&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;✅测试&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;测试:    添加一个测试&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;🔧工具&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;工具:    开发工具变动(构建、脚手架工具等)&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;⏪回滚&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;回滚:    代码回退&#39;</span> <span class="token punctuation">}</span>
   <span class="token punctuation">]</span><span class="token punctuation">,</span>
   <span class="token literal-property property">scopes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;leetcode&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;javascript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;typescript&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Vue&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;node&#39;</span> <span class="token punctuation">}</span>
   <span class="token punctuation">]</span><span class="token punctuation">,</span>
   <span class="token comment">// it needs to match the value for field type. Eg.: &#39;fix&#39;</span>
   <span class="token comment">/*  scopeOverrides: {
     fix: [
       {name: &#39;merge&#39;},
       {name: &#39;style&#39;},
       {name: &#39;e2eTest&#39;},
       {name: &#39;unitTest&#39;}
     ]
   },  */</span>
   <span class="token comment">// override the messages, defaults are as follows</span>
   <span class="token literal-property property">messages</span><span class="token operator">:</span> <span class="token punctuation">{</span>
     <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;选择一种你的提交类型:&#39;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">scope</span><span class="token operator">:</span> <span class="token string">&#39;选择一个scope (可选):&#39;</span><span class="token punctuation">,</span>
     <span class="token comment">// used if allowCustomScopes is true</span>
     <span class="token literal-property property">customScope</span><span class="token operator">:</span> <span class="token string">&#39;Denote the SCOPE of this change:&#39;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">&#39;短说明:\\n&#39;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&#39;长说明，使用&quot;|&quot;换行(可选)：\\n&#39;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">breaking</span><span class="token operator">:</span> <span class="token string">&#39;非兼容性说明 (可选):\\n&#39;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">footer</span><span class="token operator">:</span> <span class="token string">&#39;关联关闭的issue，例如：#31, #34(可选):\\n&#39;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">confirmCommit</span><span class="token operator">:</span> <span class="token string">&#39;确定提交说明?(yes/no)&#39;</span>
   <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token literal-property property">allowCustomScopes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
   <span class="token literal-property property">allowBreakingChanges</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;特性&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;修复&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
   <span class="token comment">// limit subject length</span>
   <span class="token literal-property property">subjectLimit</span><span class="token operator">:</span> <span class="token number">100</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>package.json 中,将原来commit配置,变更为自定义配置 ■</li><li>然后提交</li></ul><h2 id="_3-测试" tabindex="-1"><a class="header-anchor" href="#_3-测试" aria-hidden="true">#</a> 3.测试</h2><h3 id="单元测试" tabindex="-1"><a class="header-anchor" href="#单元测试" aria-hidden="true">#</a> 单元测试</h3><ul><li>jest</li><li>测试三部曲</li><li>input&amp;output</li></ul><h3 id="配置jest" tabindex="-1"><a class="header-anchor" href="#配置jest" aria-hidden="true">#</a> 配置jest</h3><ul><li>前往 jest 文档,根据需求添加内容</li><li>www.jestjs.cn/docs/gettin… 提交代码的测试运行</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npx husky add <span class="token punctuation">.</span>husky<span class="token operator">/</span>pre<span class="token operator">-</span>push <span class="token string">&quot;npm test&quot;</span> # 提交代码前<span class="token punctuation">,</span>跑一遍测试用例
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,57),i=[p];function l(o,r){return n(),a("div",null,i)}const u=s(t,[["render",l],["__file","index.html.vue"]]);export{u as default};
