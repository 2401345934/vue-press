import{_ as n,z as s,A as a,a6 as p}from"./framework.fef63301.js";const e={},t=p(`<h1 id="初识-npm-script" tabindex="-1"><a class="header-anchor" href="#初识-npm-script" aria-hidden="true">#</a> 初识 npm script</h1><h2 id="用-npm-init-快速创建项目" tabindex="-1"><a class="header-anchor" href="#用-npm-init-快速创建项目" aria-hidden="true">#</a> 用 npm init 快速创建项目</h2><p>开始探索 npm script 之前，我们先聊聊这些 scripts 所依赖的文件 package.json，以它为基础的 npm 则是 node.js 社区蓬勃发展的顶梁柱。</p><p>npm 为我们提供了快速创建 package.json 文件的命令 npm init，执行该命令会问几个基本问题，如包名称、版本号、作者信息、入口文件、仓库地址、许可协议等，多数问题已经提供了默认值，你可以在问题后敲回车接受默认值：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">package</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">(</span>hello<span class="token operator">-</span>npm<span class="token operator">-</span>script<span class="token punctuation">)</span>
<span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token number">0.1</span><span class="token number">.0</span><span class="token punctuation">)</span>
<span class="token literal-property property">description</span><span class="token operator">:</span> hello npm script
entry point<span class="token operator">:</span> <span class="token punctuation">(</span>index<span class="token punctuation">.</span>js<span class="token punctuation">)</span>
test command<span class="token operator">:</span>
git repository<span class="token operator">:</span>
<span class="token literal-property property">keywords</span><span class="token operator">:</span> npm<span class="token punctuation">,</span> script
<span class="token literal-property property">license</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token constant">MIT</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的例子指定了描述（description）和关键字（keywords）两个字段，基本问题问完之后 npm 会把 package.json 文件内容打出来供你确认：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello-npm-script&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.1.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello npm script&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;npm&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;script&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wangshijun &lt;wangshijun2010@gmail.com&gt; (&lt;https://github.com/wangshijun&gt;)&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;MIT&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按回车确认就能把package.json 的内容写到文件系统，如果要修改 package.json，可以直接用编辑器编辑，或者再次运行 npm init，npm 默认不会覆盖修改里面已经存在的信息。</p><p>可以使用 npm init -f（意指 --force，或者使用 --yes）告诉 npm 直接跳过参数问答环节，快速生成 package.json。</p><h2 id="初始化-package-json-时的字段默认值是可以自己配置的" tabindex="-1"><a class="header-anchor" href="#初始化-package-json-时的字段默认值是可以自己配置的" aria-hidden="true">#</a> 初始化 package.json 时的字段默认值是可以自己配置的</h2><p>我上面的默认版本号是 0.1.0，而 npm 默认的版本号是 0.0.1，可以用下面的命令去修改默认配置：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm config <span class="token keyword">set</span> init<span class="token punctuation">.</span>author<span class="token punctuation">.</span>email <span class="token string">&quot;wangshijun2010@gmail.com&quot;</span>
npm config <span class="token keyword">set</span> init<span class="token punctuation">.</span>author<span class="token punctuation">.</span>name <span class="token string">&quot;wangshijun&quot;</span>
npm config <span class="token keyword">set</span> init<span class="token punctuation">.</span>author<span class="token punctuation">.</span>url <span class="token string">&quot;http://github.com/wangshijun&quot;</span>
npm config <span class="token keyword">set</span> init<span class="token punctuation">.</span>license <span class="token string">&quot;MIT&quot;</span>
npm config <span class="token keyword">set</span> init<span class="token punctuation">.</span>version <span class="token string">&quot;0.1.0&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="用-npm-run-执行任意命令" tabindex="-1"><a class="header-anchor" href="#用-npm-run-执行任意命令" aria-hidden="true">#</a> 用 npm run 执行任意命令</h2><p>npm 是如何管理和执行各种 scripts 的呢？作为 npm 内置的核心功能之一，npm run 实际上是 npm run-script 命令的简写。当我们运行 npm run xxx 时，基本步骤如下：</p><p>注意，这是简化的流程</p><ul><li>从 package.json 文件中读取 scripts 对象里面的全部配置；</li><li>以传给 npm run 的第一个参数作为键，本例中为 xxx，在 scripts 对象里面获取对应的值作为接下来要执行的命令，如果没找到直接报错；</li><li>在系统默认的 shell 中执行上述命令，系统默认 shell 通常是 bash，windows 环境下可能略有不同，稍后再讲。</li></ul><p>如果不带任何参数执行 npm run，它会列出可执行的所有命令</p><h2 id="创建自定义-npm-script" tabindex="-1"><a class="header-anchor" href="#创建自定义-npm-script" aria-hidden="true">#</a> 创建自定义 npm script</h2><p>在新项目或者任何现有项目中添加 eslint 自定义脚本的步骤如下：</p><h3 id="_1-准备被检查的代码" tabindex="-1"><a class="header-anchor" href="#_1-准备被检查的代码" aria-hidden="true">#</a> 1. 准备被检查的代码</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;some value&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;some log&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-添加-eslint-依赖" tabindex="-1"><a class="header-anchor" href="#_2-添加-eslint-依赖" aria-hidden="true">#</a> 2. 添加 eslint 依赖</h3><p>执行如下命令将 eslint 添加为 devDependencies：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm install eslint <span class="token operator">-</span><span class="token constant">D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-初始化-eslint-配置" tabindex="-1"><a class="header-anchor" href="#_3-初始化-eslint-配置" aria-hidden="true">#</a> 3. 初始化 eslint 配置</h3><p>用 eslint 做检查需要配置规则集，存放规则集的文件就是配置文件，使用如下文件生成配置文件：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span><span class="token operator">/</span>node_modules<span class="token operator">/</span><span class="token punctuation">.</span>bin<span class="token operator">/</span>eslint <span class="token operator">--</span>init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在命令行提示中选择 Answer questions about your style</p><p>回车后根目录下就有了 .eslintrc.js 配置文件：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">es6</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token string">&#39;eslint:recommended&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">indent</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;linebreak-style&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unix&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">quotes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;single&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">semi</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-添加-eslint-命令" tabindex="-1"><a class="header-anchor" href="#_4-添加-eslint-命令" aria-hidden="true">#</a> 4. 添加 eslint 命令</h3><p>在 package.json 的 scripts 字段中新增命令 eslint：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;eslint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint *.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-运行-eslint-命令" tabindex="-1"><a class="header-anchor" href="#_5-运行-eslint-命令" aria-hidden="true">#</a> 5. 运行 eslint 命令</h3><p>执行 npm run eslint</p>`,35),o=[t];function i(c,l){return s(),a("div",null,o)}const u=n(e,[["render",i],["__file","index.html.vue"]]);export{u as default};
